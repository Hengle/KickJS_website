{"majorversion": 3, "filemap": {"collada.js": {"classlist": ["KICK.importer.ColladaImporter"], "name": "collada.js", "module": "KICK"}, "material.js": {"classlist": ["KICK.material.Shader", "KICK.material.Material"], "name": "material.js", "module": "KICK"}, "texture.js": {"classlist": ["KICK.texture.RenderTexture", "KICK.texture.Texture"], "name": "texture.js", "module": "KICK"}, "math.js": {"classlist": ["KICK.math.vec2", "KICK.math.vec3", "KICK.math.vec4", "KICK.math.mat3", "KICK.math.mat4", "KICK.math.quat4"], "name": "math.js", "module": "KICK"}, "core.js": {"classlist": ["KICK.core.ResourceProvider", "KICK.core.ResourceManager", "KICK.core.Engine", "KICK.core.Config", "KICK.core.Time", "KICK.core.KeyInput", "KICK.core.Util"], "name": "core.js", "module": "KICK"}, "core-default.js": {"classlist": ["KICK.core.DefaultResourceProvider"], "name": "core-default.js", "module": "KICK"}, "meshfactory.js": {"classlist": ["KICK.mesh.MeshFactory"], "name": "meshfactory.js", "module": "KICK"}, "mesh.js": {"classlist": ["KICK.mesh.MeshData", "KICK.mesh.Mesh"], "name": "mesh.js", "module": "KICK"}, "glslconstants.js": {"classlist": ["KICK.material.GLSLConstants"], "name": "glslconstants.js", "module": "KICK"}, "renderer.js": {"classlist": ["KICK.renderer.Renderer", "KICK.renderer.NullRenderer", "KICK.renderer.ForwardRenderer"], "name": "renderer.js", "module": "KICK"}, "scene.js": {"classlist": ["KICK.scene.GameObject", "KICK.scene.Component", "KICK.scene.Transform", "KICK.scene.Scene", "KICK.scene.Camera", "KICK.scene.ComponentChangedListener", "KICK.scene.MeshRenderer", "KICK.scene.Light", "KICK.scene.SceneLights"], "name": "scene.js", "module": "KICK"}, "constants.js": {"classlist": ["KICK.core.Constants"], "name": "constants.js", "module": "KICK"}}, "modules": {"KICK": {"description": "description _", "submodules": [], "classlist": ["KICK.importer.ColladaImporter", "KICK.core.Constants", "KICK.core.DefaultResourceProvider", "KICK.core.ResourceProvider", "KICK.core.ResourceManager", "KICK.core.Engine", "KICK.core.Config", "KICK.core.Time", "KICK.core.KeyInput", "KICK.core.Util", "KICK.material.GLSLConstants", "KICK.material.Shader", "KICK.material.Material", "KICK.math.vec2", "KICK.math.vec3", "KICK.math.vec4", "KICK.math.mat3", "KICK.math.mat4", "KICK.math.quat4", "KICK.mesh.MeshData", "KICK.mesh.Mesh", "KICK.mesh.MeshFactory", "KICK.renderer.Renderer", "KICK.renderer.NullRenderer", "KICK.renderer.ForwardRenderer", "KICK.scene.GameObject", "KICK.scene.Component", "KICK.scene.Transform", "KICK.scene.Scene", "KICK.scene.Camera", "KICK.scene.ComponentChangedListener", "KICK.scene.MeshRenderer", "KICK.scene.Light", "KICK.scene.SceneLights", "KICK.texture.RenderTexture", "KICK.texture.Texture"], "filelist": ["collada.js", "constants.js", "core-default.js", "core.js", "glslconstants.js", "material.js", "math.js", "mesh.js", "meshfactory.js", "renderer.js", "scene.js", "texture.js"], "subdata": {}, "guessedname": "KICK", "guessedtype": "property", "name": "KICK"}}, "classmap": {"KICK.core.ResourceProvider": {"name": "KICK.core.ResourceProvider", "constructors": [{"params": [{"type": "String", "name": "protocol", "description": ""}], "description": "Responsible for creating or loading a resource using a given url"}], "namespace": "KICK.core", "module": "KICK", "methods": {"getScene": {"return": {"type": "KICK.scene.Scene", "description": ""}, "params": [{"type": "String", "name": "url", "description": ""}]}, "getMesh": {"return": {"type": "KICK.mesh.Mesh", "description": ""}, "params": [{"type": "String", "name": "url", "description": ""}]}, "getShader": {"return": {"type": "KICK.material.Shader", "description": ""}, "params": [{"type": "String", "name": "url", "description": ""}]}, "getTexture": {"return": {"type": "KICK.texture.Texture", "description": ""}, "params": [{"type": "String", "name": "url", "description": ""}]}}, "file": "core.js", "shortname": "ResourceProvider", "properties": {"protocol": {"type": "String", "description": "Protocol of the resource, such as http, kickjs<br>\nThe protocol must uniquely identify a resource provider"}}, "description": "Responsible for creating or loading a resource using a given url"}, "KICK.mesh.MeshFactory": {"name": "KICK.mesh.MeshFactory", "namespace": "KICK.mesh", "module": "KICK", "guessedname": "MeshFactory", "methods": {"createTriangleData": {"static": "", "return": {"type": "KICK.core.MeshData", "description": "triangle mesh"}, "description": "Creates a triangle in the XY plane", "guessedname": "createTriangleData", "guessedtype": "function"}, "createUVSphereData": {"return": {"type": "KICK.mesh.MeshData", "description": "uv-sphere mesh"}, "description": "Create a UV sphere", "static": "", "guessedname": "createUVSphereData", "guessedtype": "function", "params": [{"type": "Number", "name": "slices", "description": ""}, {"type": "Number", "name": "stacks", "description": ""}, {"type": "Number", "name": "radius", "description": ""}]}, "createPlaneData": {"static": "", "return": {"type": "KICK.mesh.MeshData", "description": "plane mesh"}, "description": "Create a plane in the XY plane (made of two triangles). The mesh objects has UVs and normals attributes.", "guessedname": "createPlaneData", "guessedtype": "function"}, "createCubeData": {"return": {"type": "KICK.mesh.Mesh", "description": "cube mesh"}, "description": "Create a code of size length. The cube has colors, normals and UVs.<br>\nNote that the length of the sides are 2*length", "static": "", "guessedname": "createCubeData", "guessedtype": "function", "params": [{"type": "Number", "name": "length", "description": " Optional, default value is 1.0"}]}}, "static": "", "file": "meshfactory.js", "guessedtype": "property", "shortname": "MeshFactory", "description": "Class responsible for creating Mesh objects"}, "KICK.core.KeyInput": {"name": "KICK.core.KeyInput", "namespace": "KICK.core", "module": "KICK", "guessedname": "KeyInput", "methods": {"isKeyDown": {"return": {"type": "boolean", "description": "true if key is pressed down in this frame"}, "params": [{"type": "Number", "name": "keyCode", "description": ""}], "guessedname": "isKeyDown", "guessedtype": "function"}, "isKeyUp": {"return": {"type": "boolean", "description": "true if key is release in this frame"}, "params": [{"type": "Number", "name": "keyCode", "description": ""}], "guessedname": "isKeyUp", "guessedtype": "function"}, "isKey": {"return": {"type": "boolean", "description": "true if key is down"}, "params": [{"type": "Number", "name": "keyCode", "description": ""}], "guessedname": "isKey", "guessedtype": "function"}, "update": {"private": "", "description": "This method clears key up and key downs each frame (leaving key unmodified)", "guessedname": "frameUpdated", "guessedtype": "function"}}, "file": "core.js", "guessedtype": "function", "shortname": "KeyInput", "description": "Key Input manager.<br>\nThis class encapsulate keyboard input and makes it easy to\ntest for key input.<br>\nExample code:\n<pre class=\"brush: js\">\nfunction KeyTestComponent(engine){\n&nbsp;var keyInput;\n&nbsp;// registers listener (invoked when component is registered)\n&nbsp;this.activated = function (){\n&nbsp;&nbsp;keyInput = engine.keyInput;\n&nbsp;};\n&nbsp;this.update = function(){\n&nbsp;&nbsp;var keyCodeForA = 65;\n&nbsp;&nbsp;if (keyInput.isKeyDown(keyCodeForA)){\n&nbsp;&nbsp;&nbsp;console.log(\"A key is down\");\n&nbsp;&nbsp;}\n&nbsp;&nbsp;if (keyInput.isKey(keyCodeForA)){\n&nbsp;&nbsp;&nbsp;console.log(\"A key is being held down\");\n&nbsp;&nbsp;}\n&nbsp;&nbsp;if (keyInput.isKeyUp(keyCodeForA)){\n&nbsp;&nbsp;&nbsp;console.log(\"A key is up\");\n&nbsp;&nbsp;}\n&nbsp;};\n}\n</pre>\n<br>\nPressing the 'a' key should result in one frame with 'A key is down',\nmultiple frames with 'A key is being held down' and finally one frame\nwith 'A key is up'"}, "KICK.core.Engine": {"name": "KICK.core.Engine", "constructors": [{"params": [{"type": "String", "name": "id", "description": " elementid of canvas tag"}, {"type": "KICK.core.Config", "name": "config", "description": " Optional, configuration object"}], "description": "Game engine object"}], "namespace": "KICK.core", "module": "KICK", "guessedname": "Engine", "methods": {"addContextListener": {"params": [{"type": "Object", "name": "contextLostListener", "description": " implements contextLost() and contextRestored(gl)"}], "guessedname": "addContextListener", "guessedtype": "function"}, "createUID": {"return": {"type": "Number", "description": "uniq id"}, "description": "Creates a uniq id", "guessedname": "createUID", "guessedtype": "function"}, "_gameLoop": {"params": [{"type": "Number", "name": "time", "description": " current time in milliseconds"}], "private": "", "guessedname": "_gameLoop", "guessedtype": "function"}, "addFrameListener": {"params": [{"type": "Object", "name": "frameListener", "description": ""}], "description": "Add a framelistener. Frame listeners are invoked last thing in update loop.<br>\nFrame listener object must define the method frameUpdated()", "guessedname": "addFrameListener", "guessedtype": "function"}, "init": {"private": ""}, "removeFrameListener": {"return": {"type": "boolean", "description": "element removed"}, "params": [{"type": "Object", "name": "frameListener", "description": ""}], "guessedname": "removeFrameListener", "guessedtype": "function"}, "canvasResized": {"description": "This method should be invoked when the canvas is resized.<br>\nThis will change the viewport size of the WebGL context.<br>\nInstead of calling this method explicit, the configuration parameter\ncheckCanvasResizeInterval can also be set to support automatically checks", "guessedname": "canvasResized", "guessedtype": "function"}}, "file": "core.js", "guessedtype": "function", "shortname": "Engine", "properties": {"canvas": {"type": "HTML-Element", "description": "The canvas element (readonly)", "guessedname": "canvas", "guessedtype": "property"}, "resourceManager": {"type": "KICK.core.ResourceManager", "description": "Resource manager of the engine. Loads and cache resources.", "guessedname": "resourceManager", "guessedtype": "property"}, "keyInput": {"type": "KICK.core.KeyInput", "description": "Returns a keyInput object. This object is used to detect key input.", "guessedname": "keyInput", "guessedtype": "property"}, "paused": {"type": "boolean", "description": "Controls is the gameloop is running", "guessedname": "paused", "guessedtype": "property"}, "activeScene": {"type": "KICK.scene.Scene", "guessedname": "activeScene", "guessedtype": "property"}, "time": {"type": "KICK.core.Time", "description": "Time object of the engine. Is updated every frame", "guessedname": "time", "guessedtype": "property"}, "gl": {"type": "WebGLContext", "description": "The WebGL context (readonly)", "guessedname": "gl", "guessedtype": "property"}, "config": {"type": "KICK.core.Config", "description": "Configuration of the engine", "guessedname": "config", "guessedtype": "property"}}, "description": "Game engine object"}, "KICK.scene.ComponentChangedListener": {"name": "KICK.scene.ComponentChangedListener", "namespace": "KICK.scene", "module": "KICK", "guessedname": "ComponentChangedListener", "methods": {"componentsRemoved": {"params": [{"type": "Array[KICK.scene.Components]", "name": "components", "description": ""}]}, "componentsAdded": {"params": [{"type": "Array[KICK.scene.Components]", "name": "components", "description": ""}]}, "isComponentListener": {"static": "", "params": [{"type": "Object", "name": "obj", "description": ""}], "guessedname": "isComponentListener", "guessedtype": "function"}}, "file": "scene.js", "guessedtype": "property", "shortname": "ComponentChangedListener", "description": "Specifies the interface for a component listener.<br>\nNote that object only need to implement the methods componentsAdded and componentsRemoved.<br>\nHowever the class does exist and has the static method isComponentListener"}, "KICK.core.Config": {"name": "KICK.core.Config", "constructors": [{"params": [{"type": "Config", "name": "config", "description": " defines one or more properties"}], "description": "The global configuration of the engine. Cannot be changed during runtime."}], "namespace": "KICK.core", "module": "KICK", "guessedname": "Config", "file": "core.js", "guessedtype": "function", "shortname": "Config", "properties": {"enableDebugContext": {"type": "Boolean", "description": "Checks for WebGL errors after each webgl function is called.\nShould only be used for debugging.\nDefault value is false.", "guessedname": "enableDebugContext", "guessedtype": "property"}, "stencil": {"type": "Boolean", "description": "WebGL spec: Default: false. If the value is true, the drawing buffer has a stencil buffer of at least 8 bits.\nIf the value is false, no stencil buffer is available.", "guessedname": "stencil", "guessedtype": "property"}, "checkCanvasResizeInterval": {"type": "Number", "description": "Polling of canvas resize. Default is 0 (meaning not polling)", "guessedname": "checkCanvasResizeInterval", "guessedtype": "property"}, "maxNumerOfLights": {"type": "Number", "description": "Maximum number of lights in scene. Default value is 1", "guessedname": "maxNumerOfLights", "guessedtype": "property"}, "antialias": {"type": "Boolean", "description": "WebGL spec: Default: true. If the value is true and the implementation supports antialiasing the drawing\nbuffer will perform antialiasing using its choice of technique (multisample/supersample) and quality.\nIf the value is false or the implementation does not support antialiasing, no antialiasing is performed.", "guessedname": "antialias", "guessedtype": "property"}, "premultipliedAlpha": {"type": "Boolean", "description": "WebGL spec: Default: true. If the value is true the page compositor will assume the drawing buffer contains\ncolors with premultiplied alpha. If the value is false the page compositor will assume that colors in the\ndrawing buffer are not premultiplied. This flag is ignored if the alpha flag is false.\nSee Premultiplied Alpha for more information on the effects of the premultipliedAlpha flag.", "guessedname": "premultipliedAlpha", "guessedtype": "property"}, "alpha": {"type": "Boolean", "description": "WebGL spec:  Default: true. If the value is true, the drawing buffer has an alpha channel for the purposes\nof performing OpenGL destination alpha operations and compositing with the page. If the value is false, no\nalpha buffer is available.", "guessedname": "alpha", "guessedtype": "property"}}, "description": "The global configuration of the engine. Cannot be changed during runtime."}, "KICK.renderer.ForwardRenderer": {"name": "KICK.renderer.ForwardRenderer", "constructors": [{"description": "Forward renderer"}], "namespace": "KICK.renderer", "module": "KICK", "guessedname": "ForwardRenderer", "extends": "KICK.renderer.Renderer", "superclass": "KICK.renderer.Renderer", "file": "renderer.js", "guessedtype": "function", "shortname": "ForwardRenderer", "description": "Forward renderer"}, "KICK.mesh.MeshData": {"name": "KICK.mesh.MeshData", "constructors": [{"description": "Mesh data class.\nAllows for modifying mesh object easily.\nThis is a pure data class with no WebGL dependency"}], "namespace": "KICK.mesh", "module": "KICK", "guessedname": "MeshData", "methods": {"recalculateNormals": {"description": "Recalculate the vertex normals based on the triangle normals", "guessedname": "recalculateNormals", "guessedtype": "function"}, "createInterleavedData": {"private": "", "guessedname": "createInterleavedData", "guessedtype": "function"}, "isValid": {"return": {"type": "Boolean", "description": "if mesh is considered valid"}, "guessedname": "isValid", "guessedtype": "function"}, "transform": {"return": {"type": "KICK.mesh.MeshData", "description": "transformed mesh"}, "params": [{"type": "KICK.math.mat4", "name": "transformMatrix", "description": ""}], "description": "Creates a copy of the mesh and transform the vertex positions of the MeshData with a mat4.\nNote that normals are not modified - so they may need to renormalized.", "guessedname": "transform", "guessedtype": "function"}, "isVertexDataInitialized": {"return": {"type": "Boolean", "description": "return true if vertex data is initialized"}, "guessedname": "isVertexDataInitialized", "guessedtype": "property"}, "recalculateTangents": {"description": "Recalculates the tangents.<br>\nAlgorithm is based on<br>\nLengyel, Eric. “Computing Tangent Space Basis Vectors for an Arbitrary Mesh”.<br>\nTerathon Software 3D Graphics Library, 2001.<br>\nhttp://www.terathon.com/code/tangent.html", "guessedname": "recalculateTangents", "guessedtype": "function"}, "combine": {"return": {"type": "KICK.mesh.MeshData", "description": "mesh object or null if incompatible objects"}, "params": [{"type": "KICK.mesh.MeshData", "name": "secondMesh", "description": ""}, {"type": "KICK.math.mat4", "name": "transform", "description": " Optional transformation matrix"}], "description": "Combine two meshes and returns the combined mesh as a new Mesh object.<br>\nThe two meshes must have the same meshType. Only vertex attributes existing in\nboth mesh objects are transferred<br>\nTriangle fans cannot be combined", "guessedname": "combine", "guessedtype": "function"}, "createGetterSetter": {"params": [{"type": "Number", "name": "type", "description": " GL_FLOAT or GL_INT"}, {"type": "string", "name": "name", "description": ""}], "private": "", "guessedname": "createGetterSetter", "guessedtype": "function"}, "isInterleavedDataInitialized": {"return": {"type": "Boolean", "description": "return true if interleaved data is initialized"}, "guessedname": "isInterleavedDataInitialized", "guessedtype": "property"}}, "file": "mesh.js", "guessedtype": "function", "shortname": "MeshData", "parameter": "{Object} config", "properties": {"name": {"type": "string", "guessedname": "name", "guessedtype": "property"}, "indices": {"type": "Array[Number]", "description": "indices (integer)", "guessedname": "indices", "guessedtype": "property"}, "normal": {"type": "Array[Number]", "description": "Normal (vec3)", "guessedname": "normal", "guessedtype": "property"}, "color": {"type": "Array[Number]", "description": "Color (vec4)", "guessedname": "color", "guessedtype": "property"}, "uv1": {"type": "Array[Number]", "description": "UV1 (vec2)", "guessedname": "uv1", "guessedtype": "property"}, "uv2": {"type": "Array[Number]", "description": "UV2 (vec2)", "guessedname": "uv2", "guessedtype": "property"}, "meshType": {"type": "Number", "description": "Must be GL_TRIANGLES,GL_TRIANGLE_FAN, or GL_TRIANGLE_STRIP", "guessedname": "meshType", "guessedtype": "property"}, "vertex": {"type": "Array[Number]", "description": "Vertex (vec3)", "guessedname": "vertex", "guessedtype": "property"}, "vertexAttrLength": {"type": "Number", "description": "The length of vertexAttributes for one vertex in bytes", "guessedname": "vertexAttrLength", "guessedtype": "property"}, "int4": {"type": "Array[Number]", "description": "Integer attribute (two Int32)", "guessedname": "int4", "guessedtype": "property"}, "interleavedArray": {"type": "Float32Array", "guessedname": "interleavedArray", "guessedtype": "property"}, "int3": {"type": "Array[Number]", "description": "Integer attribute (two Int32)", "guessedname": "int3", "guessedtype": "property"}, "int2": {"type": "Array[Number]", "description": "Integer attribute (two Int32)", "guessedname": "int2", "guessedtype": "property"}, "int1": {"type": "Array[Number]", "description": "Integer attribute (two Int32)", "guessedname": "int1", "guessedtype": "property"}, "tangent": {"type": "Array[Number]", "description": "Tangent (vec4)", "guessedname": "tangent", "guessedtype": "property"}, "description": {"type": "Object", "description": "Describes the interleaved array format.<br>\nThe description is an object with a number of properties.<br>\nEach property name corresponds to the name of the vertex attribute.<br>\nEach property has the format <br>\n<pre class=\"brush: js\">\n{\n&nbsp;pointer: 0, // {Number}\n&nbsp;size: 0, //{Number} number of elements\n&nbsp;normalized: 0, // {Boolean} should be normalized or not\n&nbsp;type: 0 // {GL_FLOAT or GL_INT}\n}\n</pre>\n<br>\nExample:<br>\n<pre class=\"brush: js\">\nvar vertexOffset = meshData.interleavedArrayFormat[\"vertex\"].pointer;\n</pre>", "guessedname": "interleavedArrayFormat", "guessedtype": "property"}}, "description": "Mesh data class.\nAllows for modifying mesh object easily.\nThis is a pure data class with no WebGL dependency"}, "KICK.math.mat4": {"name": "KICK.math.mat4", "namespace": "KICK.math", "module": "KICK", "guessedname": "mat4", "methods": {"toRotationMat": {"return": {"type": "KICK.math.mat4", "description": "dest is specified, a new mat4 otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 containing values to copy"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving copied values"}], "description": "Copies the upper 3x3 elements of a mat4 into another mat4", "guessedname": "toRotationMat", "guessedtype": "function"}, "set": {"return": {"type": "KICK.math.mat4", "description": "dest"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 containing values to copy"}, {"type": "KICK.math.mat4", "name": "dest", "description": " mat4 receiving copied values"}], "description": "Copies the values of one mat4 to another", "guessedname": "set", "guessedtype": "function"}, "multiplyVec4": {"return": {"type": "KICK.math.vec4", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to transform the vector with"}, {"type": "KICK.math.vec4", "name": "vec", "description": " vec4 to transform"}, {"type": "KICK.math.vec4", "name": "dest", "description": " Optional, vec4 receiving operation result. If not specified result is written to vec"}], "description": "Transforms a vec4 with the given matrix", "guessedname": "multiplyVec4", "guessedtype": "function"}, "determinant": {"return": {"type": "Number", "description": "determinant of mat"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to calculate determinant of"}], "description": "Calculates the determinant of a mat4", "guessedname": "determinant", "guessedtype": "function"}, "lookAt": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, a new mat4 otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "eye", "description": " position of the viewer"}, {"type": "KICK.math.vec3", "name": "center", "description": " point the viewer is looking at"}, {"type": "KICK.math.vec3", "name": "up", "description": " vec3 pointing \"up\""}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 frustum matrix will be written into"}], "description": "Generates a look-at matrix with the given eye position, focal point, and up axis", "guessedname": "lookAt", "guessedtype": "function"}, "perspective": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, a new mat4 otherwise"}, "params": [{"type": "Number", "name": "fovy", "description": " vertical field of view"}, {"type": "Number", "name": "aspect", "description": " aspect ratio. typically viewport width/height"}, {"type": "Number", "name": "near", "description": " near bounds of the frustum"}, {"type": "Number", "name": "far", "description": " far bounds of the frustum"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 frustum matrix will be written into"}], "description": "Generates a perspective projection matrix with the given bounds", "guessedname": "perspective", "guessedtype": "function"}, "toMat3": {"params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 containing values to copy"}, {"type": "KICK.math.mat3} dest Optional, mat3 receiving copied values\nreturn {KICK.math.mat3", "name": "dest", "description": " is specified, a new mat3 otherwise"}], "description": "Copies the upper 3x3 elements of a mat4 into a mat3", "guessedname": "toMat3", "guessedtype": "function"}, "setTRSInverse": {"return": {"type": "KICK.math.mat4", "description": "dest if specified mat4 otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "translate", "description": ""}, {"type": "KICK.math.quat4", "name": "rotateQuat", "description": ""}, {"type": "KICK.math.vec3", "name": "scale", "description": ""}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optinal"}], "description": "Set the inverse of translate, rotate, scale", "guessedname": "setTRSInverse", "guessedtype": "function"}, "inverse": {"return": {"type": "KICK.math.mat4", "description": "dest is specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to calculate inverse of"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving inverse matrix. If not specified result is written to mat"}], "description": "Calculates the inverse matrix of a mat4", "guessedname": "inverse", "guessedtype": "function"}, "create": {"return": {"type": "KICK.math.mat4", "description": "New mat4"}, "params": [{"type": "Array[Number]", "name": "mat", "description": " Optional, mat4 containing values to initialize with"}], "description": "Creates a new instance of a mat4 using the default array type<br>\nAny javascript array containing at least 16 numeric elements can serve as a mat4", "guessedname": "create", "guessedtype": "function"}, "rotateX": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to rotate"}, {"type": "Number", "name": "angle", "description": " angle (in radians) to rotate"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving operation result. If not specified result is written to mat"}], "description": "Rotates a matrix by the given angle around the X axis", "guessedname": "rotateX", "guessedtype": "function"}, "rotateY": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to rotate"}, {"type": "Number", "name": "angle", "description": " angle (in radians) to rotate"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving operation result. If not specified result is written to mat"}], "description": "Rotates a matrix by the given angle around the Y axis", "guessedname": "rotateY", "guessedtype": "function"}, "rotateZ": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to rotate"}, {"type": "Number", "name": "angle", "description": " angle (in radians) to rotate"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving operation result. If not specified result is written to mat"}], "description": "Rotates a matrix by the given angle around the Z axis", "guessedname": "rotateZ", "guessedtype": "function"}, "translate": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to translate"}, {"type": "KICK.math.vec3", "name": "vec", "description": " vec3 specifying the translation"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving operation result. If not specified result is written to mat"}], "description": "Translates a matrix by the given vector", "guessedname": "translate", "guessedtype": "function"}, "multiplyVec3Vector": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to transform the vector with"}, {"type": "KICK.math.vec3", "name": "vec", "description": " vec3 to transform"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Transforms a vec3 with the given matrix<br>\n4th vector component is implicitly '0'", "guessedname": "multiplyVec3Vector", "guessedtype": "function"}, "frustum": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, a new mat4 otherwise"}, "params": [{"type": "Number", "name": "left", "description": " left bounds of the frustum"}, {"type": "Number", "name": "right", "description": " right bounds of the frustum"}, {"type": "Number", "name": "bottom", "description": " bottom bounds of the frustum"}, {"type": "Number", "name": "top", "description": " top bounds of the frustum"}, {"type": "Number", "name": "near", "description": " near bounds of the frustum"}, {"type": "Number", "name": "far", "description": " far bounds of the frustum"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 frustum matrix will be written into"}], "description": "Generates a frustum matrix with the given bounds", "guessedname": "frustum", "guessedtype": "function"}, "transpose": {"return": {"type": "KICK.math.mat4", "description": "dest is specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to transpose"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving transposed values. If not specified result is written to mat"}], "description": "Transposes a mat4 (flips the values over the diagonal)", "guessedname": "transpose", "guessedtype": "function"}, "multiplyVec3": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to transform the vector with"}, {"type": "KICK.math.vec3", "name": "vec", "description": " vec3 to transform"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Transforms a vec3 with the given matrix<br>\n4th vector component is implicitly '1'", "guessedname": "multiplyVec3", "guessedtype": "function"}, "strPretty": {"return": {"type": "String", "description": "string representation of mat"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to represent as a string"}], "description": "Returns a string representation of a mat4 printed as a 4x4 matrix (on 4 lines)", "guessedname": "strPretty", "guessedtype": "function"}, "toNormalMat3": {"return": {"type": "KICK.math.mat3", "description": "dest is specified, a new mat3 otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 containing values to tranpose, invert and copy"}, {"type": "KICK.math.mat3", "name": "dest", "description": " Optional, mat3 receiving values"}], "description": "Calculates the normal matrix (that is the transpose of the inverse of the upper 3x3 elements of a mat4) and\ncopies the result into a mat3<br>", "guessedname": "toNormalMat3", "guessedtype": "function"}, "scale": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to scale"}, {"type": "KICK.math.vec3", "name": "vec", "description": " vec3 specifying the scale for each axis"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving operation result. If not specified result is written to mat"}], "description": "Scales a matrix by the given vector", "guessedname": "scale", "guessedtype": "function"}, "multiply": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " first operand"}, {"type": "KICK.math.mat4", "name": "mat2", "description": " second operand"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving operation result. If not specified result is written to mat"}], "description": "Performs a matrix multiplication", "guessedname": "multiply", "guessedtype": "function"}, "toInverseMat3": {"return": {"type": "KICK.math.mat3", "description": "dest is specified, a new mat3 otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 containing values to invert and copy"}, {"type": "KICK.math.mat3", "name": "dest", "description": " Optional, mat3 receiving values"}], "description": "Calculates the inverse of the upper 3x3 elements of a mat4 and copies the result into a mat3<br>\nThe resulting matrix is useful for calculating transformed normals", "guessedname": "toInverseMat3", "guessedtype": "function"}, "identity": {"return": {"type": "KICK.math.mat4", "description": "dest"}, "params": [{"type": "KICK.math.mat4", "name": "dest", "description": " mat4 to set"}], "description": "Sets a mat4 to an identity matrix", "guessedname": "identity", "guessedtype": "function"}, "setTRS": {"return": {"type": "KICK.math.mat4", "description": "dest if specified mat4 otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "translate", "description": ""}, {"type": "KICK.math.quat4", "name": "rotateQuat", "description": ""}, {"type": "KICK.math.vec3", "name": "scale", "description": ""}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optinal"}], "description": "Set translate, rotate, scale", "guessedname": "setTRS", "guessedtype": "function"}, "rotate": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to rotate"}, {"type": "Number", "name": "angle", "description": " angle (in radians) to rotate"}, {"type": "KICK.math.vec3", "name": "axis", "description": " vec3 representing the axis to rotate around"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving operation result. If not specified result is written to mat"}], "description": "Rotates a matrix by the given angle around the specified axis<br>\nIf rotating around a primary axis (X,Y,Z) one of the specialized rotation functions should be used instead for\nperformance", "guessedname": "rotate", "guessedtype": "function"}, "ortho": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, a new mat4 otherwise"}, "params": [{"type": "Number", "name": "left", "description": " left bounds of the frustum"}, {"type": "Number", "name": "right", "description": " right bounds of the frustum"}, {"type": "Number", "name": "bottom", "description": " bottom bounds of the frustum"}, {"type": "Number", "name": "top", "description": " top bounds of the frustum"}, {"type": "Number", "name": "near", "description": " near bounds of the frustum"}, {"type": "Number", "name": "far", "description": " far bounds of the frustum"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 frustum matrix will be written into"}], "description": "Generates a orthogonal projection matrix with the given bounds", "guessedname": "ortho", "guessedtype": "function"}, "str": {"return": {"type": "String", "description": "string representation of mat"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to represent as a string"}], "description": "Returns a string representation of a mat4", "guessedname": "str", "guessedtype": "function"}, "rotateEuler": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, mat otherwise"}, "params": [{"type": "KICK.math.mat4", "name": "mat", "description": " mat4 to rotate"}, {"type": "KICK.math.vec3", "name": "angle", "description": " angle (in degrees) to rotate"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving operation result. If not specified result is written to mat"}], "description": "Rotates a matrix by three rotations given in eulers angles<br>\nIf rotating around a primary axis (X,Y,Z) one of the specialized rotation functions should be used instead for performance", "guessedname": "rotateEuler", "guessedtype": "function"}}, "file": "math.js", "guessedtype": "property", "shortname": "mat4", "description": "mat4 - 4x4 Matrix<br>"}, "KICK.scene.Camera": {"name": "KICK.scene.Camera", "constructors": [{"params": [{"type": "Config", "name": "configuration", "description": " with same properties as the Camera"}], "description": "Creates a game camera"}], "namespace": "KICK.scene", "module": "KICK", "guessedname": "Camera", "methods": {"setupClearFlags": {"params": [{"type": "Boolean", "name": "clearColor", "description": ""}, {"type": "Boolean", "name": "clearDepth", "description": ""}], "description": "Reset the camera clear flags", "guessedname": "setupClearFlags", "guessedtype": "function"}, "setupCamera": {"guessedname": "setupCamera", "params": [{"type": "KICK.math.mat4", "name": "projectionMatrix", "description": " Projection of the camera"}, {"type": "KICK.math.mat4", "name": "modelViewMatrix", "description": " Modelview of the camera (the inverse global transform matrix of the camera)"}, {"type": "KICK.math.mat4", "name": "modelViewProjectionMatrix", "description": " modelview multiplied with projection"}], "description": "Clear the screen and set the projectionMatrix and modelViewMatrix on the gl object", "private": "", "guessedtype": "function"}, "renderScene": {"params": [{"type": "KICK.scene.SceneLights", "name": "sceneLightObj", "description": ""}], "guessedname": "renderScene", "guessedtype": "function"}, "activated": {"description": "Handles the camera setup (get fast reference to transform and glcontext).\nAlso register component listener on scene", "guessedname": "activated", "guessedtype": "function"}, "deactivated": {"description": "Deregister component listener on scene", "guessedname": "deactivated", "guessedtype": "function"}}, "extends": "KICK.scene.Component", "superclass": "KICK.scene.Component", "file": "scene.js", "guessedtype": "function", "shortname": "Camera", "properties": {"bottom": {"type": "Number", "description": "Only used when orthogonal camera type (!cameraTypePerspective). Default -1", "guessedname": "bottom", "guessedtype": "property"}, "far": {"type": "Number", "description": "Set the far clipping plane of the view volume<br>\nUsed in both perspective and orthogonale camera.<br>\nDefault 1000.0", "guessedname": "far", "guessedtype": "property"}, "top": {"type": "Number", "description": "Only used when orthogonal camera type (!cameraTypePerspective). Default 1", "guessedname": "top", "guessedtype": "property"}, "fieldOfView": {"type": "Number", "description": "Set the field of view Y in degrees<br>\nOnly used when perspective camera type. Default 60.0", "guessedname": "fieldOfView", "guessedtype": "property"}, "cameraTypePerspective": {"type": "Boolean", "description": "True means camera is perspective projection, false means orthogonale projection<br>\nDefault true", "guessedname": "cameraTypePerspective", "guessedtype": "property"}, "renderTarget": {"type": "KICK.texture.RenderTexture", "description": "Set the render target of the camera. Null means screen framebuffer.<br>", "guessedname": "renderTarget", "guessedtype": "property"}, "near": {"type": "Number", "description": "Set the near clipping plane of the view volume<br>\nUsed in both perspective and orthogonale camera.<br>\nDefault 0.1", "guessedname": "near", "guessedtype": "property"}, "clearFlagColor": {"type": "Boolean", "description": "Indicates if the camera should clear color buffer.<br>\nDefault value is true", "guessedname": "clearFlagColor", "guessedtype": "property"}, "clearFlagDepth": {"type": "Boolean", "description": "Indicates if the camera should clear the depth buffer.<br>\nDefault is true.", "guessedname": "clearFlagDepth", "guessedtype": "property"}, "normalizedViewportRect": {"type": "Array[Number]", "description": "Normalized viewport rect [xOffset,yOffset,xWidth,yHeight]<br>\nDefault is [0,0,1,1]", "guessedname": "normalizedViewportRect", "guessedtype": "property"}, "layerMask": {"type": "Number", "description": "Camera renders only objects where the components layer exist in the layer mask. <br>\nThe two values a", "guessedname": "layerMask", "guessedtype": "property"}, "cameraIndex": {"type": "Number", "description": "The sorting order when multiple cameras exists in the scene.<br>\nCameras with lowest number is rendered first.", "guessedname": "cameraIndex", "guessedtype": "property"}, "clearColor": {"type": "KICK.math.vec4", "description": "Only used when orthogonal camera type (!cameraTypePerspective). Default [1,1,1,1]", "guessedname": "clearColor", "guessedtype": "property"}, "left": {"type": "Number", "description": "Only used for orthogonal camera type (!cameraTypePerspective). Default -1", "guessedname": "left", "guessedtype": "property"}}, "description": "Creates a game camera"}, "KICK.math.mat3": {"name": "KICK.math.mat3", "namespace": "KICK.math", "module": "KICK", "guessedname": "mat3", "methods": {"set": {"return": {"type": "KICK.math.mat3", "description": "dest"}, "params": [{"type": "KICK.math.mat3", "name": "mat", "description": " mat3 containing values to copy"}, {"type": "KICK.math.mat3", "name": "dest", "description": " mat3 receiving copied values"}], "description": "Copies the values of one mat3 to another", "guessedname": "set", "guessedtype": "function"}, "create": {"return": {"type": "KICK.math.mat3", "description": "New mat3"}, "params": [{"type": "Array[Number]", "name": "mat", "description": " Optional, mat3 containing values to initialize with"}], "description": "Creates a new instance of a mat3 using the default array type<br>\nAny javascript array containing at least 9 numeric elements can serve as a mat3", "guessedname": "create", "guessedtype": "function"}, "transpose": {"return": {"type": "KICK.math.mat3", "description": "dest is specified, mat otherwise"}, "params": [{"type": "KICK.math.mat3", "name": "mat", "description": " mat3 to transpose"}, {"type": "KICK.math.mat3", "name": "dest", "description": " Optional, mat3 receiving transposed values. If not specified result is written to mat"}], "description": "Transposes a mat3 (flips the values over the diagonal)", "guessedname": "transpose", "guessedtype": "function"}, "strPretty": {"return": {"type": "String", "description": "string representation of mat"}, "params": [{"type": "KICK.math.mat3", "name": "mat", "description": " mat3 to represent as a string"}], "description": "Returns a string representation of a mat3 printed as a 4x4 matrix (on 3 lines)", "guessedname": "strPretty", "guessedtype": "function"}, "str": {"return": {"type": "String", "description": "string representation of mat"}, "params": [{"type": "KICK.math.mat3", "name": "mat", "description": " mat3 to represent as a string"}], "description": "Returns a string representation of a mat3", "guessedname": "str", "guessedtype": "function"}, "toMat4": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, a new mat4 otherwise"}, "params": [{"type": "KICK.math.mat3", "name": "mat", "description": " mat3 containing values to copy"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving copied values"}], "description": "Copies the elements of a mat3 into the upper 3x3 elements of a mat4", "guessedname": "toMat4", "guessedtype": "function"}, "identity": {"return": {"type": "KICK.math.mat3", "description": "dest"}, "params": [{"type": "KICK.math.mat3", "name": "dest", "description": " mat3 to set"}], "description": "Sets a mat3 to an identity matrix", "guessedname": "identity", "guessedtype": "function"}}, "file": "math.js", "guessedtype": "property", "shortname": "mat3", "description": "mat3 - 3x3 Matrix"}, "KICK.material.GLSLConstants": {"name": "KICK.material.GLSLConstants", "namespace": "KICK.material", "module": "KICK", "guessedname": "GLSLConstants", "static": "", "file": "glslconstants.js", "guessedtype": "property", "shortname": "GLSLConstants", "properties": {"phong_vs.glsl": {"type": "String", "description": "GLSL file content"}, "unlit_vs.glsl": {"type": "String", "description": "GLSL file content"}, "error_vs.glsl": {"type": "String", "description": "GLSL file content"}, "light.glsl": {"type": "String", "description": "GLSL file content"}, "phong_fs.glsl": {"type": "String", "description": "GLSL file content"}, "unlit_fs.glsl": {"type": "String", "description": "GLSL file content"}, "error_fs.glsl": {"type": "String", "description": "GLSL file content"}}, "description": "Contains glsl source code constants<br>\nThe content of this class is generated from the content of the file folder src/glsl"}, "KICK.mesh.Mesh": {"name": "KICK.mesh.Mesh", "constructors": [{"params": [{"type": "KICK.core.Engine", "name": "engine", "description": ""}, {"type": "Object", "name": "config", "description": ""}, {"type": "MeshData", "name": "data", "description": ""}], "description": "A Mesh object allows you to bind and render a MeshData object"}], "namespace": "KICK.mesh", "module": "KICK", "guessedname": "Mesh", "methods": {"destroy": {"description": "Destroys the mesh data and deletes the associated resources\nAfter this the mesh cannot be bound", "guessedname": "destroy", "guessedtype": "function"}, "updateData": {"private": "", "description": "Copy data to the vertex buffer object (VBO)", "guessedname": "updateData", "guessedtype": "function"}, "bind": {"params": [{"type": "KICK.material.Shader", "name": "shader", "description": ""}], "description": "Bind the vertex attributes of the mesh to the shader", "guessedname": "bind", "guessedtype": "function"}, "render": {"description": "Renders the current mesh", "guessedname": "render", "guessedtype": "function"}, "verify": {"return": {"type": "Array[String]", "description": "list of missing vertex attributes in mesh or null if no missing attributes"}, "params": [{"type": "KICK.material.Shader", "name": "shader", "description": ""}], "description": "This function verifies that the mesh has the vertex attributes (normals, uvs, tangents) that the shader uses.", "guessedname": "verify", "guessedtype": "function"}}, "file": "mesh.js", "guessedtype": "function", "shortname": "Mesh", "properties": {"name": {"type": "String", "guessedname": "name", "guessedtype": "property"}, "meshData": {"type": "KICK.mesh.MeshData", "description": "Setting this property to something will update the data in WebGL. Note that\nchanging a MeshData object will not itself update anything.", "guessedname": "meshData", "guessedtype": "property"}}, "description": "A Mesh object allows you to bind and render a MeshData object"}, "KICK.renderer.Renderer": {"name": "KICK.renderer.Renderer", "constructors": [{"description": "Defines interface for render classes."}], "namespace": "KICK.renderer", "module": "KICK", "methods": {"render": {"params": [{"type": "KICK.scene.Component", "name": "renderableComponents", "description": ""}], "description": "Called each frame to render the components"}}, "file": "renderer.js", "shortname": "Renderer", "description": "Defines interface for render classes."}, "KICK.scene.MeshRenderer": {"name": "KICK.scene.MeshRenderer", "constructors": [{"description": "Renders a Mesh.\nTo create custom renderable objects you should not inherit from this class, but simple create a component with a\nrender() method."}], "namespace": "KICK.scene", "module": "KICK", "properties": {"material": {"type": "KICK.material.Material", "guessedname": "material", "guessedtype": "property"}, "mesh": {"type": "KICK.mesh.Mesh", "guessedname": "mesh", "guessedtype": "property"}}, "guessedname": "MeshRenderer", "methods": {"activated": {"guessedname": "activated", "guessedtype": "function"}, "render": {"params": [{"type": "KICK.math.mat4", "name": "modelViewMatrix", "description": ""}, {"type": "KICK.math.mat4", "name": "modelViewProjectionMatrix", "description": " modelviewMatrix multiplied with projectionMatrix"}, {"type": "KICK.scene.SceneLights", "name": "sceneLights", "description": ""}], "description": "This method may not be called (the renderer could make the same calls)", "guessedname": "render", "guessedtype": "function"}}, "extends": "KICK.scene.Component", "superclass": "KICK.scene.Component", "file": "scene.js", "guessedtype": "function", "shortname": "MeshRenderer", "final": "", "description": "Renders a Mesh.\nTo create custom renderable objects you should not inherit from this class, but simple create a component with a\nrender() method."}, "KICK.scene.Light": {"name": "KICK.scene.Light", "constructors": [{"params": [{"type": "Object", "name": "config", "description": ""}], "description": "A light object.<br>\nNote that each scene can only have one ambient light and one directional light."}], "namespace": "KICK.scene", "module": "KICK", "properties": {"color": {"type": "KICK.math.vec3", "description": "Color intensity of the light (RGBA)", "guessedname": "color", "guessedtype": "property"}, "intensity": {"type": "Number", "description": "Light intensity (a multiplier to color)", "guessedname": "intensity", "guessedtype": "property"}, "type": {"final": "", "type": "Enum", "description": "Color type. Must be either:<br>\nKICK.core.Constants._LIGHT_TYPE_AMBIENT,\nKICK.core.Constants._LIGHT_TYPE_DIRECTIONAL,\nKICK.core.Constants._LIGHT_TYPE_DIRECTIONAL <br>\nNote that this value is readonly. To change it create a new Light component and replace the current light\ncomponent of its gameObject", "guessedname": "type", "guessedtype": "property"}, "colorIntensity": {"final": "", "type": "KICK.math.vec3", "description": "color RGB multiplied with intensity (plus color A).<br>\nThis property exposes a internal value. This value should not be modified.\nInstead use the intensity and color property.", "guessedname": "colorIntensity", "guessedtype": "property"}}, "guessedname": "Light", "extends": "KICK.scene.Component", "superclass": "KICK.scene.Component", "file": "scene.js", "guessedtype": "function", "shortname": "Light", "final": "", "description": "A light object.<br>\nNote that each scene can only have one ambient light and one directional light."}, "KICK.importer.ColladaImporter": {"description": "Imports a collada meshes into a scene", "namespace": "KICK.importer", "module": "KICK", "guessedname": "ColladaImporter", "methods": {"getArrayElementById": {"return": {"type": "Array[Number]", "description": "data"}, "description": "Get data element by id<br>\nNote that the array is cached by id - this is done\nto speed up performance in case of interleaved data", "private": "", "params": [{"type": "String", "name": "id", "description": ""}], "guessedname": "getArrayElementById", "guessedtype": "function"}, "loadCollada": {"return": {"type": "Array[KICK.scene.GameObject]", "description": ""}, "static": "", "params": [{"type": "XMLDom", "name": "colladaDOM", "description": ""}, {"type": "KICK.core.Engine", "name": "engine", "description": ""}, {"type": "KICK.scene.Scene", "name": "scene", "description": " Optional. If not specified the active scene (from the engine) is used"}, {"type": "boolean", "name": "rotate90x", "description": " rotate -90 degrees around x axis"}], "guessedname": "loadCollada", "guessedtype": "function"}, "addVertexAttributes": {"guessedname": "addVertexAttributes", "params": [{"type": "Number", "name": "index", "description": " Source index in vertex array (the p element)"}, {"type": "Object", "name": "outVertexAttributes", "description": " Destination vertex index array"}, {"type": "Array[Number]", "name": "outTriangleIndices", "description": " Destination vertex index array"}], "description": "This method adds vertex attributes to the result index and", "private": "", "guessedtype": "function"}, "stringToArray": {"guessedname": "stringToArray", "params": [{"type": "String", "name": "numberString", "description": ""}, {"type": "Number", "name": "count", "description": " Optional"}, {"type": "Object", "name": "type", "description": " Optional - valid types are Array (default), and typed arrays classes"}], "description": "Converts a string to an array", "private": "", "guessedtype": "function"}, "buildDataAccessor": {"return": {"type": "", "description": "function of type function(index,paramOffset)"}, "description": "Create accessor object for data", "private": "", "params": [{"type": "XML", "name": "elementChild", "description": ""}], "guessedname": "buildDataAccessor", "guessedtype": "function"}, "buildFromTrianglestrips": {"description": "buildFromTrianglestrips", "private": "", "guessedname": "buildFromTrianglestrips", "guessedtype": "function"}, "buildFromPolyList": {"params": [{"type": "XMLDomElement", "name": "polylist", "description": ""}, {"type": "KICK.mesh.MeshData", "name": "destMeshData", "description": ""}], "private": "", "guessedname": "buildFromPolyList", "guessedtype": "function"}}, "file": "collada.js", "guessedtype": "property", "shortname": "ColladaImporter", "name": "KICK.importer.ColladaImporter"}, "KICK.math.vec4": {"name": "KICK.math.vec4", "namespace": "KICK.math", "module": "KICK", "guessedname": "vec4", "methods": {"set": {"return": {"type": "KICK.math.vec4", "description": "dest"}, "params": [{"type": "KICK.math.vec4", "name": "vec", "description": " vec4 containing values to copy"}, {"type": "KICK.math.vec4", "name": "dest", "description": " vec4 receiving copied values"}], "description": "Copies the values of one vec4 to another", "guessedname": "set", "guessedtype": "function"}, "wrapArray": {"return": {"type": "Array[KICK.math.vec4]", "description": ""}, "params": [{"type": "Float32Array", "name": "array", "description": ""}], "description": "Wraps a Float32Array with multiple vec4 arrays. For instance if you have colors defined in a single\nFloat32Array, but need to do vector operations on the elements of the array, instead of copying data out of the\nFloat32Array, wrapArray will give you access to the same data.\n<br>\nExample:<br>\n<pre class=\"brush: js\">\nfunction avarageColor(float32arrayColor){\nvar sum = vec4.create(),\nwrappedArray = vec4.wrapArray(float32arrayColor),\nweigth = 1.0/wrappedArray;\nfor (var i=0;i  &lt; wrappedArray.length;i++){\nvec4.add(sum,wrappedArray[i]);\n}\nreturn vec4.multiply(sum,[weigth,weigth,weigth,weigth]);\n}\n</pre>", "guessedname": "wrapArray", "guessedtype": "function"}, "length": {"return": {"type": "Number", "description": "Length of vec"}, "params": [{"type": "KICK.math.vec4", "name": "vec", "description": " vec4 to calculate length of"}], "description": "Calculates the length of a vec4", "guessedname": "length", "guessedtype": "function"}, "negate": {"return": {"type": "KICK.math.vec4", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec4", "name": "vec", "description": " vec4 to negate"}, {"type": "KICK.math.vec4", "name": "dest", "description": " Optional, vec4 receiving operation result. If not specified result is written to vec"}], "description": "Negates the components of a vec4", "guessedname": "negate", "guessedtype": "function"}, "add": {"return": {"type": "KICK.math.vec4", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec4", "name": "vec", "description": "  first operand"}, {"type": "KICK.math.vec4", "name": "vec2", "description": "  second operand"}, {"type": "KICK.math.vec4", "name": "dest", "description": " Optional, vec4 receiving operation result. If not specified result is written to vec"}], "description": "Performs a vector addition", "guessedname": "add", "guessedtype": "function"}, "scale": {"return": {"type": "KICK.math.vec4", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec4", "name": "vec", "description": " vec4 to scale"}, {"type": "Number", "name": "val", "description": " Numeric value to scale by"}, {"type": "KICK.math.vec4", "name": "dest", "description": " Optional, vec4 receiving operation result. If not specified result is written to vec"}], "description": "Multiplies the components of a vec4 by a scalar value", "guessedname": "scale", "guessedtype": "function"}, "str": {"return": {"type": "String", "description": "string representation of vec"}, "params": [{"type": "KICK.math.vec4", "name": "vec", "description": " vec4 to represent as a string"}], "description": "Returns a string representation of a vector", "guessedname": "str", "guessedtype": "function"}, "multiply": {"return": {"type": "KICK.math.vec4", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec4", "name": "vec", "description": " first operand"}, {"type": "KICK.math.vec4", "name": "vec2", "description": " second operand"}, {"type": "KICK.math.vec4", "name": "dest", "description": " Optional, vec4 receiving operation result. If not specified result is written to vec"}], "description": "Performs a vector multiplication", "guessedname": "multiply", "guessedtype": "function"}, "array": {"return": {"type": "KICK.math.vec3", "description": "New vec3"}, "params": [{"type": "Number", "name": "count", "description": " Number of vec 3 to be layed out in memory"}, {"type": "Object", "name": "ref", "description": " Optional, if set a memory reference is set to ref.mem"}], "description": "Create a continuous array in memory mapped to vec4.\nExample\n<pre class=\"brush: js\">\nvar ref = {};\nvar v = KICK.math.vec4.array(2,ref);\nv[1][1] = 1;\nref.mem[5] == v[1][1];\n</pre>\nWill be layed out like this:\n<pre class=\"brush: js\">\n[vec4][vec4] = [0][1][2][3][4][5][6][7]\n</pre>", "guessedname": "array", "guessedtype": "function"}, "subtract": {"return": {"type": "KICK.math.vec4", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec4", "name": "vec", "description": " first operand"}, {"type": "KICK.math.vec4", "name": "vec2", "description": " second operand"}, {"type": "KICK.math.vec4", "name": "dest", "description": " Optional, vec4 receiving operation result. If not specified result is written to vec"}], "description": "Performs a vector subtraction", "guessedname": "subtract", "guessedtype": "function"}, "create": {"return": {"type": "KICK.math.vec4", "description": "New vec4"}, "params": [{"type": "Array[Number]", "name": "vec", "description": " Optional, vec4 containing values to initialize with"}], "description": "Creates a new instance of a vec4 using the default array type<br>\nAny javascript array containing at least 4 numeric elements can serve as a vec4", "guessedname": "create", "guessedtype": "function"}}, "file": "math.js", "guessedtype": "property", "shortname": "vec4", "description": "vec4 - 4 Dimensional Vector<br>\nNote: To perform vec3 functions on vec4, simply call the vec3 functions<br>"}, "KICK.scene.Transform": {"name": "KICK.scene.Transform", "constructors": [{"params": [{"type": "KICK.scene.GameObject", "name": "gameObject", "description": ""}], "description": "Position, rotation and scale of a game object. This component should not be created manually.\nIt is created when a GameObject is created."}], "namespace": "KICK.scene", "module": "KICK", "guessedname": "Transform", "methods": {"getLocalMatrix": {"return": {"type": "KICK.math.mat4", "description": "local transformation"}, "description": "Return the local transformation matrix", "guessedname": "getLocalMatrix", "guessedtype": "function"}, "getLocalTRSInverse": {"return": {"type": "KICK.math.mat4", "description": "inverse of local transformation"}, "description": "Return the local inverse of translate rotate scale", "guessedname": "getLocalTRSInverse", "guessedtype": "function"}, "getGlobalMatrix": {"return": {"type": "KICK.math.mat4", "description": "global transform"}, "guessedname": "getGlobalMatrix", "guessedtype": "function"}, "markGlobalDirty": {"private": "", "description": "Mark the global transform updated.\nThis will mark the transform updated (meaning the global transform must be recomputed based on\ntranslation, rotation, scale)", "guessedname": "_markGlobalDirty", "guessedtype": "property"}, "getGlobalTRSInverse": {"return": {"type": "KICK.math.mat4", "description": "inverse global transform"}, "description": "Return the inverse of global rotate translate transform", "guessedname": "getGlobalTRSInverse", "guessedtype": "function"}}, "extends": "KICK.scene.Component", "superclass": "KICK.scene.Component", "file": "scene.js", "guessedtype": "function", "shortname": "Transform", "properties": {"localRotationEuler": {"type": "KICK.math.vec3", "description": "Local rotation in euler angles.", "guessedname": "localRotationEuler", "guessedtype": "property"}, "localPosition": {"type": "KICK.math.vec3", "description": "Local position.", "guessedname": "localPosition", "guessedtype": "property"}, "parent": {"type": "KICK.scene.Transform", "description": "Parent transform. Initial null.", "guessedname": "parent", "guessedtype": "property"}, "rotationEuler": {"type": "KICK.math.vec3", "description": "Global rotation in euler angles.", "guessedname": "rotationEuler", "guessedtype": "property"}, "localRotation": {"type": "KICK.math.quat4", "description": "Local rotation in quaternion.", "guessedname": "localRotation", "guessedtype": "property"}, "localScale": {"type": "KICK.math.vec3", "description": "Local scale", "guessedname": "localScale", "guessedtype": "property"}, "position": {"type": "KICK.math.vec3", "description": "Global position.", "guessedname": "position", "guessedtype": "property"}, "rotation": {"type": "KICK.math.quat4", "description": "Global rotation in quaternion.", "guessedname": "rotation", "guessedtype": "property"}, "children": {"type": "Array[KICK.scene.Transform]", "description": "Array of children. The children should not be modified directly. Instead use the parent property", "guessedname": "children", "guessedtype": "property"}}, "description": "Position, rotation and scale of a game object. This component should not be created manually.\nIt is created when a GameObject is created."}, "KICK.core.ResourceManager": {"name": "KICK.core.ResourceManager", "constructors": [{"description": "Responsible for allocation and deallocation of resources."}], "namespace": "KICK.core", "module": "KICK", "guessedname": "ResourceManager", "methods": {"getShader": {"return": {"type": "KICK.material.Shader", "description": ""}, "params": [{"type": "String", "name": "url", "description": ""}], "guessedname": "getShader", "guessedtype": "property"}, "getTexture": {"return": {"type": "KICK.texture.Texture", "description": ""}, "params": [{"type": "String", "name": "url", "description": ""}], "guessedname": "getTexture", "guessedtype": "property"}, "getMesh": {"return": {"type": "KICK.mesh.Mesh", "description": ""}, "params": [{"type": "String", "name": "url", "description": ""}], "guessedname": "getMesh", "guessedtype": "property"}, "buildGetFunc": {"return": {"type": "Function", "description": "getter function with the signature function(url)"}, "params": [{"type": "Object", "name": "cache", "description": ""}, {"type": "String", "name": "methodName", "description": ""}], "guessedname": "buildGetFunc", "private": "", "guessedtype": "function"}, "getScene": {"return": {"type": "KICK.scene.Scene", "description": ""}, "params": [{"type": "String", "name": "url", "description": ""}], "guessedname": "getScene", "guessedtype": "property"}, "release": {"params": [{"type": "String", "name": "url", "description": ""}], "description": "Release a reference to the resource.\nIf reference count is 0, then the reference is deleted and the destroy method on the\nresource object are invoked.", "guessedname": "release", "guessedtype": "function"}}, "file": "core.js", "guessedtype": "function", "shortname": "ResourceManager", "description": "Responsible for allocation and deallocation of resources."}, "KICK.math.quat4": {"name": "KICK.math.quat4", "namespace": "KICK.math", "module": "KICK", "guessedname": "quat4", "methods": {"normalize": {"return": {"type": "KICK.math.quat4", "description": "dest if specified, quat otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 to normalize"}, {"type": "KICK.math.quat4", "name": "dest", "description": " Optional, quat4 receiving operation result. If not specified result is written to quat"}], "description": "Generates a unit quaternion of the same direction as the provided quat4<br>\nIf quaternion length is 0, returns [0, 0, 0, 0]", "guessedname": "normalize", "guessedtype": "function"}, "slerp": {"return": {"type": "KICK.math.quat4", "description": "dest if specified, quat otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " first quaternion"}, {"type": "KICK.math.quat4", "name": "quat2", "description": " second quaternion"}, {"type": "Number", "name": "slerp", "description": " interpolation amount between the two inputs"}, {"type": "KICK.math.quat4", "name": "dest", "description": " Optional, quat4 receiving operation result. If not specified result is written to quat"}], "description": "Performs a spherical linear interpolation between two quat4", "guessedname": "slerp", "guessedtype": "function"}, "inverse": {"return": {"type": "KICK.math.quat4", "description": "dest if specified, quat otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 to calculate inverse of"}, {"type": "KICK.math.quat4", "name": "dest", "description": " Optional, quat4 receiving inverse values. If not specified result is written to quat"}], "description": "Calculates the inverse of a quat4", "guessedname": "inverse", "guessedtype": "function"}, "angleAxis": {"return": {"type": "KICK.math.quat4", "description": "dest if specified, a new quat4 otherwise"}, "params": [{"type": "Number", "name": "angle", "description": " rotation angle in degrees"}, {"type": "KICK.math.vec3", "name": "vec", "description": " normalized axis"}, {"type": "KICK.math.quat4", "name": "dest", "description": " Optional, quat4 receiving operation result"}], "description": "Set the rotation based on eulers angles.", "guessedname": "angleAxis", "guessedtype": "function"}, "create": {"return": {"type": "KICK.math.quat4", "description": "New quat4"}, "params": [{"type": "Array[Number]", "name": "quat", "description": " Optional, quat4 containing values to initialize with"}], "description": "Creates a new instance of a quat4 using the default array type<br>\nAny javascript array containing at least 4 numeric elements can serve as a quat4", "guessedname": "create", "guessedtype": "property"}, "multiplyVec3": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 to transform the vector with"}, {"type": "KICK.math.vec3", "name": "vec", "description": " vec3 to transform"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Transforms a vec3 with the given quaternion", "guessedname": "multiplyVec3", "guessedtype": "function"}, "toEuler": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, a new vec3 otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 to create matrix from"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3  receiving operation result"}], "description": "Calculates a rotation represented in eulers angles (in degrees)", "guessedname": "toEuler", "guessedtype": "function"}, "setEuler": {"return": {"type": "KICK.math.quat4", "description": "dest if specified, a new quat4 otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " vec3 eulers angles (degrees)"}, {"type": "KICK.math.quat4", "name": "dest", "description": " Optional, quat4 receiving operation result"}], "description": "Set the rotation based on eulers angles.", "guessedname": "setEuler", "guessedtype": "function"}, "length": {"return": {"type": "Number", "description": "Length of quat"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 to calculate length of"}], "description": "Calculates the length of a quat4", "guessedname": "length", "guessedtype": "property"}, "set": {"return": {"type": "KICK.math.quat4", "description": "dest"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 containing values to copy"}, {"type": "KICK.math.quat4", "name": "dest", "description": " quat4 receiving copied values"}], "description": "Copies the values of one quat4 to another", "guessedname": "set", "guessedtype": "property"}, "str": {"return": {"type": "String", "description": "string representation of quat"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 to represent as a string"}], "description": "Returns a string representation of a quaternion", "guessedname": "str", "guessedtype": "function"}, "multiply": {"return": {"type": "KICK.math.quat4", "description": "dest if specified, quat otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " first operand"}, {"type": "KICK.math.quat4", "name": "quat2", "description": " second operand"}, {"type": "KICK.math.quat4", "name": "dest", "description": " Optional, quat4 receiving operation result. If not specified result is written to quat"}], "description": "Performs a quaternion multiplication", "guessedname": "multiply", "guessedtype": "function"}, "calculateW": {"return": {"type": "KICK.math.quat4", "description": "dest if specified, quat otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 to calculate W component of"}, {"type": "KICK.math.quat4", "name": "dest", "description": " Optional, quat4 receiving calculated values. If not specified result is written to quat"}], "description": "Calculates the W component of a quat4 from the X, Y, and Z components.<br>\nAssumes that quaternion is 1 unit in length.<br>\nAny existing W component will be ignored.", "guessedname": "calculateW", "guessedtype": "function"}, "difference": {"return": {"type": "KICK.math.quat4", "description": "dest if specified, quat otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " from rotation"}, {"type": "KICK.math.quat4", "name": "quat2", "description": " to rotation"}, {"type": "KICK.math.quat4", "name": "dest", "description": " Optional"}], "description": "Return rotation that goes from quat to quat2.<br>\nIt is the same as: quat4.multiply(quat4.inverse(quat),quat2,dest);", "guessedname": "difference", "guessedtype": "function"}, "toMat4": {"return": {"type": "KICK.math.mat4", "description": "dest if specified, a new mat4 otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 to create matrix from"}, {"type": "KICK.math.mat4", "name": "dest", "description": " Optional, mat4 receiving operation result"}], "description": "Calculates a 4x4 matrix from the given quat4", "guessedname": "toMat4", "guessedtype": "function"}, "toMat3": {"return": {"type": "KICK.math.mat3", "description": "dest if specified, a new mat3 otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " quat4 to create matrix from"}, {"type": "KICK.math.mat3", "name": "dest", "description": " Optional, mat3 receiving operation result"}], "description": "Calculates a 3x3 matrix from the given quat4", "guessedname": "toMat3", "guessedtype": "function"}, "identity": {"return": {"type": "KICK.math.quat4", "description": "dest if specified, a new quat4 otherwise"}, "params": [{"type": "KICK.math.quat4", "name": "quat", "description": " Optional, quat4 to set the identity to"}], "description": "Set the identity to the quaternion (0,0,0,1)", "guessedname": "identity", "guessedtype": "function"}}, "file": "math.js", "guessedtype": "property", "shortname": "quat4", "description": "quat4 - Quaternions"}, "KICK.renderer.NullRenderer": {"name": "KICK.renderer.NullRenderer", "constructors": [{"description": "Does not render any components"}], "namespace": "KICK.renderer", "module": "KICK", "guessedname": "NullRenderer", "extends": "KICK.renderer.Renderer", "superclass": "KICK.renderer.Renderer", "file": "renderer.js", "guessedtype": "function", "shortname": "NullRenderer", "description": "Does not render any components"}, "KICK.math.vec2": {"name": "KICK.math.vec2", "namespace": "KICK.math", "module": "KICK", "guessedname": "vec2", "methods": {"normalize": {"return": {"type": "KICK.math.vec2", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec2", "name": "vec", "description": " vec3 to normalize"}, {"type": "KICK.math.vec2", "name": "dest", "description": " Optional, vec2 receiving operation result. If not specified result is written to vec"}], "description": "Generates a unit vector of the same direction as the provided vec2\nIf vector length is 0, returns [0, 0]", "guessedname": "normalize", "guessedtype": "function"}, "set": {"return": {"type": "KICK.math.vec2", "description": "dest"}, "params": [{"type": "KICK.math.vec2", "name": "vec", "description": " vec2 containing values to copy"}, {"type": "KICK.math.vec2", "name": "dest", "description": " vec2 receiving copied values"}], "description": "Copies the values of one vec2 to another", "guessedname": "set", "guessedtype": "function"}, "wrapArray": {"return": {"type": "Array[KICK.math.vec2]", "description": "of vec2"}, "params": [{"type": "Float32Array", "name": "array", "description": ""}], "description": "See KICK.math.vec4.wrapArray", "guessedname": "wrapArray", "guessedtype": "function"}, "add": {"return": {"type": "KICK.math.vec2", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec2", "name": "vec", "description": "  first operand"}, {"type": "KICK.math.vec2", "name": "vec2", "description": "  second operand"}, {"type": "KICK.math.vec2", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Performs a vector addition", "guessedname": "add", "guessedtype": "function"}, "array": {"return": {"type": "KICK.math.vec2", "description": "New vec2"}, "params": [{"type": "Number", "name": "count", "description": " Number of vec 2 to be layed out in memory"}, {"type": "Object", "name": "ref", "description": " Optional, if set a memory reference is set to ref.mem"}], "description": "Create a continuous array in memory mapped to vec2. <br>", "guessedname": "array", "guessedtype": "function"}, "subtract": {"return": {"type": "KICK.math.vec2", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec2", "name": "vec", "description": " first operand"}, {"type": "KICK.math.vec2", "name": "vec2", "description": " second operand"}, {"type": "KICK.math.vec2", "name": "dest", "description": " Optional, vec2 receiving operation result. If not specified result is written to vec"}], "description": "Performs a vector subtraction", "guessedname": "subtract", "guessedtype": "function"}, "create": {"return": {"type": "KICK.math.vec2", "description": "New vec2"}, "params": [{"type": "Array[Number]", "name": "vec", "description": " Optional, vec2 containing values to initialize with"}], "description": "Creates a new instance of a vec2 using the default array type\nAny javascript array containing at least 2 numeric elements can serve as a vec2", "guessedname": "create", "guessedtype": "function"}}, "file": "math.js", "guessedtype": "property", "shortname": "vec2", "description": "vec2 - 2 dimensional vector"}, "KICK.math.vec3": {"name": "KICK.math.vec3", "namespace": "KICK.math", "module": "KICK", "guessedname": "vec3", "methods": {"normalize": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " vec3 to normalize"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Generates a unit vector of the same direction as the provided vec3\nIf vector length is 0, returns [0, 0, 0]", "guessedname": "normalize", "guessedtype": "function"}, "direction": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " origin vec3"}, {"type": "KICK.math.vec3", "name": "vec2", "description": " vec3 to point to"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Generates a unit vector pointing from one vector to another", "guessedname": "direction", "guessedtype": "function"}, "set": {"return": {"type": "KICK.math.vec3", "description": "dest"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " vec3 containing values to copy"}, {"type": "KICK.math.vec3", "name": "dest", "description": " vec3 receiving copied values"}], "description": "Copies the values of one vec3 to another", "guessedname": "set", "guessedtype": "function"}, "lerp": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " first vector"}, {"type": "KICK.math.vec3", "name": "vec2", "description": " second vector"}, {"type": "Number", "name": "lerp", "description": " interpolation amount between the two inputs"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Performs a linear interpolation between two vec3", "guessedname": "lerp", "guessedtype": "function"}, "wrapArray": {"return": {"type": "Array[KICK.math.vec3]", "description": "of vec3"}, "params": [{"type": "Float32Array", "name": "array", "description": ""}], "description": "See KICK.math.vec4.wrapArray", "guessedname": "wrapArray", "guessedtype": "function"}, "sphericalToCarterian": {"return": {"type": "KICK.math.vec3", "description": "position in cartesian angles"}, "params": [{"type": "KICK.math.vec3", "name": "spherical", "description": " spherical coordinates"}, {"type": "KICK.math.vec3", "name": "cartesian", "description": " optionally if not specified a new vec3 is returned"}], "description": "Converts the spherical coordinates (in radians) to carterian coordinates.<br>\nSpherical coordinates are mapped so vec[0] is radius, vec[1] is polar and vec[2] is elevation", "guessedname": "sphericalToCarterian", "guessedtype": "function"}, "cross": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " first operand"}, {"type": "KICK.math.vec3", "name": "vec2", "description": " second operand"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Generates the cross product of two vec3s", "guessedname": "cross", "guessedtype": "function"}, "lengthSqr": {"return": {"type": "Number", "description": "Squared length of vec"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " vec3 to calculate squared length of"}], "description": "Calculates the squared length of a vec3", "guessedname": "lengthSqr", "guessedtype": "function"}, "negate": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " vec3 to negate"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Negates the components of a vec3", "guessedname": "negate", "guessedtype": "function"}, "add": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": "  first operand"}, {"type": "KICK.math.vec3", "name": "vec2", "description": "  second operand"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Performs a vector addition", "guessedname": "add", "guessedtype": "function"}, "scale": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " vec3 to scale"}, {"type": "Number", "name": "val", "description": " Numeric value to scale by"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Multiplies the components of a vec3 by a scalar value", "guessedname": "scale", "guessedtype": "function"}, "cartesianToSpherical": {"return": {"type": "KICK.math.vec3", "description": ""}, "params": [{"type": "KICK.math.vec3", "name": "cartesian", "description": ""}, {"type": "KICK.math.vec3", "name": "spherical", "description": " Optional"}], "description": "Converts from cartesian coordinates to spherical coordinates (in radians)<br>\nSpherical coordinates are mapped so vec[0] is radius, vec[1] is polar and vec[2] is elevation", "guessedname": "cartesianToSpherical", "guessedtype": "function"}, "str": {"return": {"type": "String", "description": "string representation of vec"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " vec3 to represent as a string"}], "description": "Returns a string representation of a vector", "guessedname": "str", "guessedtype": "function"}, "multiply": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " first operand"}, {"type": "KICK.math.vec3", "name": "vec2", "description": " second operand"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Performs a vector multiplication", "guessedname": "multiply", "guessedtype": "function"}, "length": {"return": {"type": "Number", "description": "Length of vec"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " vec3 to calculate length of"}], "description": "Calculates the length of a vec3", "guessedname": "length", "guessedtype": "function"}, "array": {"return": {"type": "KICK.math.vec3", "description": "New vec3"}, "params": [{"type": "Number", "name": "count", "description": " Number of vec 3 to be layed out in memory"}, {"type": "Object", "name": "ref", "description": " Optional, if set a memory reference is set to ref.mem"}], "description": "Create a continuous array in memory mapped to vec3. <br>\n<br>\nExample<br>\n<pre class=\"brush: js\">\nvar ref = {};\nvar v = KICK.math.vec3.array(2,ref);\nv[1][1] = 1;\nref.mem[4] == v[1][1];\n</pre>\nWill be layed out like this: <br>\n<br>\n<pre class=\"brush: js\">\n[vec3][vec3) = [0][1][2][3][4][5]\n</pre>", "guessedname": "array", "guessedtype": "function"}, "subtract": {"return": {"type": "KICK.math.vec3", "description": "dest if specified, vec otherwise"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " first operand"}, {"type": "KICK.math.vec3", "name": "vec2", "description": " second operand"}, {"type": "KICK.math.vec3", "name": "dest", "description": " Optional, vec3 receiving operation result. If not specified result is written to vec"}], "description": "Performs a vector subtraction", "guessedname": "subtract", "guessedtype": "function"}, "create": {"return": {"type": "KICK.math.vec3", "description": "New vec3"}, "params": [{"type": "Array[Number]", "name": "vec", "description": " Optional, vec3 containing values to initialize with"}], "description": "Creates a new instance of a vec3 using the default array type\nAny javascript array containing at least 3 numeric elements can serve as a vec3", "guessedname": "create", "guessedtype": "function"}, "dot": {"return": {"type": "Number", "description": "Dot product of vec and vec2"}, "params": [{"type": "KICK.math.vec3", "name": "vec", "description": " first operand"}, {"type": "KICK.math.vec3", "name": "vec2", "description": " second operand"}], "description": "Calculates the dot product of two vec3s", "guessedname": "dot", "guessedtype": "function"}}, "file": "math.js", "guessedtype": "property", "shortname": "vec3", "description": "vec3 - 3 Dimensional Vector"}, "KICK.core.Util": {"name": "KICK.core.Util", "namespace": "KICK.core", "module": "KICK", "guessedname": "Util", "methods": {"contains": {"return": {"type": "boolean", "description": "array contains element"}, "params": [{"type": "Array", "name": "array", "description": ""}, {"type": "Object", "name": "element", "description": ""}], "description": "Loops through array and return true if any array element strict equals the element.\nThis uses the === to compare the two elements.", "guessedname": "contains", "guessedtype": "function"}, "scaleImage": {"return": {"type": "Canvas", "description": "return a Canvas object (acts as a image)"}, "params": [{"type": "Image", "name": "imageObj", "description": ""}, {"type": "Number", "name": "newWidth", "description": ""}, {"type": "Number", "name": "newHeight", "description": ""}], "description": "Scales the image by drawing the image on a canvas object.", "guessedname": "scaleImage", "guessedtype": "function"}, "numberSortFunction": {"return": {"type": "Number", "description": "a-b"}, "params": [{"type": "Number", "name": "a", "description": ""}, {"type": "Number", "name": "b", "description": ""}], "description": "Returns a-b", "guessedname": "numberSortFunction", "guessedtype": "function"}, "getParameterInt": {"return": {"type": "String", "description": "parameter value or null if not found."}, "description": "Reads a int parameter from a url string.", "param": "{String} url", "params": [{"type": "String", "name": "url", "description": ""}, {"type": "String", "name": "parameterName", "description": ""}], "guessedname": "getParameterInt", "guessedtype": "function"}, "getParameter": {"return": {"type": "String", "description": "parameter value or null if not found."}, "params": [{"type": "String", "name": "url", "description": ""}, {"type": "String", "name": "parameterName", "description": ""}], "description": "Reads a parameter from a url string.", "guessedname": "getParameter", "guessedtype": "function"}, "insertSorted": {"params": [{"type": "Object", "name": "element", "description": ""}, {"type": "Array", "name": "sortedArray", "description": ""}, {"type": "Function", "name": "sortFunc", "description": " has the signature foo(obj1,obj2) returns Number. Optional (uses numberSort as default)"}], "description": "Insert the element into a sorted array", "guessedname": "insertSorted", "guessedtype": "function"}, "typedArrayToArray": {"return": {"type": "Array[Number]", "description": ""}, "description": "Converts a typed array to a number array", "static": "", "guessedname": "typedArrayToArray", "guessedtype": "function", "params": [{"type": "TypedArray", "name": "typedArray", "description": ""}]}, "removeElementsFromArray": {"static": "", "params": [{"type": "Array", "name": "array", "description": ""}, {"type": "Object", "name": "removeValues", "description": "  value to be deleted"}], "description": "Removes all values from one array in another array", "guessedname": "removeElementsFromArray", "guessedtype": "function"}, "fail": {"static": "", "description": "Invokes debugger and throws an error", "guessedname": "fail", "guessedtype": "function"}, "removeElementFromArray": {"return": {"type": "boolean", "description": "elementRemoved"}, "description": "Remove one element from an array - either the first instance or all instances", "static": "", "guessedname": "removeElementFromArray", "guessedtype": "function", "params": [{"type": "Array", "name": "array", "description": ""}, {"type": "Object", "name": "removeValue", "description": " value to be deleted"}, {"type": "boolean", "name": "deleteAll", "description": "  deletaAll objects (or exit function after first deletion)"}]}}, "file": "core.js", "guessedtype": "property", "shortname": "Util", "description": "Utility class for miscellaneous functions. The class is static and is shared between multiple instances."}, "KICK.scene.Scene": {"name": "KICK.scene.Scene", "constructors": [{"params": [{"type": "KICK.core.Engine", "name": "engine", "description": ""}], "description": "A scene objects contains a list of GameObjects"}], "namespace": "KICK.scene", "module": "KICK", "guessedname": "Scene", "methods": {"findComponentsOfType": {"return": {"type": "Array[KICK.scene.Component]", "description": "components"}, "params": [{"type": "Type", "name": "componentType", "description": ""}], "description": "Search the scene for components of the specified type in the scene. Note that this\nmethod is slow - do not run in the the update function.", "guessedname": "findComponentsOfType", "guessedtype": "function"}, "cleanupGameObjects": {"private": "", "description": "Handle insertions and removal of gameobjects and components. This is done in a separate step to avoid problems\nwith missed updates (or multiple updates) due to modifying the array while iterating it.", "guessedname": "cleanupGameObjects", "guessedtype": "function"}, "destroyObject": {"params": [{"type": "KICK.scene.GameObject", "name": "gameObject", "description": ""}], "guessedname": "destroyObject", "guessedtype": "function"}, "addComponent": {"protected": "", "params": [{"type": "KICK.scene.Component", "name": "component", "description": ""}], "description": "Should only be called by GameObject when a component is added. If the component is updateable (implements\nupdate or lateUpdate) the components is added to the current list of updateable components after the update loop\n(so it will not recieve any update invocations in the current frame).\nIf the component is renderable (implements), is it added to the renderer's components", "guessedname": "addComponent", "guessedtype": "function"}, "cameraSortFunc": {"guessedname": "cameraSortFunc", "params": [{"type": "KICK.scene.Camera", "name": "a", "description": ""}, {"type": "KICK.scene.Camera", "name": "b", "description": ""}, {"type": "Number", "name": "difference", "description": ""}], "description": "Compares two camera objects by their cameraIndex attribute", "private": "", "guessedtype": "function"}, "removeComponentListener": {"params": [{"type": "KICK.scene.ComponentChangedListener", "name": "componentListener", "description": ""}], "description": "Removes a component change listener from the scene", "guessedname": "removeComponentListener", "guessedtype": "function"}, "getNumberOfGameObjects": {"return": {"type": "Number", "description": "number of gameobjects"}, "guessedname": "getNumberOfGameObjects", "guessedtype": "function"}, "removeComponent": {"params": [{"type": "KICK.scene", "name": "component", "description": ""}], "guessedname": "removeComponent", "guessedtype": "function"}, "createGameObject": {"return": {"type": "KICK.scene.GameObject", "description": ""}, "guessedname": "createGameObject", "guessedtype": "function"}, "saveScene": {"return": {"type": "String", "description": "in jsonFormat"}, "guessedname": "saveScene", "guessedtype": "function"}, "addComponentListener": {"params": [{"type": "KICK.scene.ComponentChangedListener", "name": "componentListener", "description": ""}], "description": "Add a component listener to the scene. A component listener should contain two functions:\n{componentsAdded(components) and componentsRemoved(components)}.\nThrows an exception if the two required functions does not exist.", "guessedname": "addComponentListener", "guessedtype": "function"}, "loadScene": {"params": [{"type": "String", "name": "jsonStr", "description": ""}], "guessedname": "loadScene", "guessedtype": "function"}, "debug": {"description": "Prints scene properties to the console", "guessedname": "debug", "guessedtype": "function"}, "sortByScriptPriority": {"return": {"type": "Number", "description": "order of a,b"}, "description": "Compares two objects based on scriptPriority", "private": "", "params": [{"type": "KICK.scene.Component", "name": "a", "description": ""}, {"type": "KICK.scene.Component", "name": "b", "description": ""}], "guessedname": "sortByScriptPriority", "guessedtype": "function"}, "getGameObject": {"return": {"type": "KICK.scene.GameObject", "description": ""}, "params": [{"type": "Number", "name": "index", "description": ""}], "guessedname": "getGameObject", "guessedtype": "function"}, "updateAndRender": {"description": "Called by engine every frame. Updates and render scene", "guessedname": "updateAndRender", "guessedtype": "function"}}, "file": "scene.js", "guessedtype": "function", "shortname": "Scene", "properties": {"engine": {"type": "KICK.core.Engine", "description": "Reference to the engine"}}, "description": "A scene objects contains a list of GameObjects"}, "KICK.core.DefaultResourceProvider": {"name": "KICK.core.DefaultResourceProvider", "constructors": [{"params": [{"type": "KICK.core.Engine", "name": "engine", "description": ""}], "description": "The default resource manager"}], "namespace": "KICK.core", "module": "KICK", "guessedname": "DefaultResourceProvider", "methods": {"getScene": {"return": {"type": "KICK.scene.Scene", "description": "or null if scene cannot be initialized"}, "params": [{"type": "String", "name": "url", "description": ""}], "guessedname": "getScene", "guessedtype": "function"}, "getMesh": {"return": {"type": "KICK.mesh.Mesh", "description": ""}, "params": [{"type": "String", "name": "url", "description": ""}], "description": "Creates a Mesh object based on a url.<br>\nThe following resources can be created:<br>\n<ul>\n<li><b>Triangle</b> Url: kickjs://mesh/triangle/</li>\n<li><b>Plane</b> Url: kickjs://mesh/plane/<br></li>\n<li><b>UVSphere</b> Url: kickjs://mesh/uvsphere/?slides=20&stacks=10&radius=1.0<br>Note that the parameters is optional</li>\n<li><b>Cube</b> Url: kickjs://mesh/cube/?length=1.0<br>Note that the parameters is optional</li>\n</ul>", "guessedname": "getMesh", "guessedtype": "function"}, "getShader": {"return": {"type": "KICK.material.Shader", "description": "Shader or null if not found"}, "params": [{"type": "String", "name": "url", "description": ""}], "description": "Create a default shader based on a URL<br>\nThe following shaders are available:\n<ul>\n<li><b>Phong</b> Url: kickjs://shader/phong/</li>\n<li><b>Unlit</b> Url: kickjs://shader/unlit/</li>\n<li><b>Error</b> Url: kickjs://shader/error/<br></li>\n</ul>", "guessedname": "getShader", "guessedtype": "function"}, "getTexture": {"return": {"type": "KICK.texture.Texture", "description": "Texture object - or null if no texture is found for the specified url"}, "params": [{"type": "String", "name": "url", "description": ""}], "description": "Create a default texture based on a URL.<br>\nThe following default textures exists:\n<ul>\n<li><b>Black</b> Url: kickjs://texture/black/</li>\n<li><b>White</b> Url: kickjs://texture/white/<br></li>\n<li><b>Gray</b>  Url: kickjs://texture/gray/<br></li>\n</ul>", "guessedname": "getTexture", "guessedtype": "function"}}, "extends": "KICK.core.ResourceProvider", "superclass": "KICK.core.ResourceProvider", "file": "core-default.js", "guessedtype": "function", "shortname": "DefaultResourceProvider", "properties": {"protocol": {"type": "String", "description": "Protocol of the resource, such as http, kickjs<br>\nThe protocol must uniquely identify a resource provider", "guessedname": "protocol", "guessedtype": "property"}}, "description": "The default resource manager"}, "KICK.scene.GameObject": {"name": "KICK.scene.GameObject", "constructors": [{"params": [{"type": "KICK.scene.Scene", "name": "scene", "description": ""}], "description": "Game objects. (Always attached to a given scene)"}], "namespace": "KICK.scene", "module": "KICK", "guessedname": "GameObject", "methods": {"removeComponent": {"params": [{"type": "KICK.scene.Component", "name": "component", "description": ""}], "description": "Remove the component from a gameObject and clear the gameObject field on the component", "guessedname": "removeComponent", "guessedtype": "function"}, "addComponent": {"params": [{"type": "KICK.scene.Component", "name": "component", "description": ""}], "description": "Add the component to a gameObject and set the gameObject field on the component", "guessedname": "addComponent", "guessedtype": "function"}, "getComponentsOfType": {"return": {"type": "Array[Object]", "description": "arrays of components of specified type"}, "params": [{"type": "Object", "name": "type", "description": " the constructor of the wanted component"}], "description": "Get all component of a specified type. Internally uses instanceof.<br>\nExample usage:<br>\n<pre class=\"brush: js\">\nvar meshRenderer = someGameObject.getComponentsOfType(KICK.scene.MeshRenderer);\nif (meshRenderer.length > 0){\nmaterial = meshRenderer[0].material;\n}\n</pre>", "guessedname": "getComponentsOfType", "guessedtype": "function"}, "getComponent": {"return": {"type": "KICK.scene.Component", "description": ""}, "params": [{"type": "Number", "name": "index", "description": ""}], "description": "Get component by index (note the Transform component will not be returned this way).", "guessedname": "getComponent", "guessedtype": "function"}, "getComponentOfType": {"return": {"type": "Object", "description": "component of specified type or null"}, "params": [{"type": "Object", "name": "type", "description": " the constructor of the wanted component"}], "description": "Get the first component of a specified type. Internally uses instanceof.<br>\nExample usage:<br>\n<pre class=\"brush: js\">\nvar meshRenderer = someGameObject.getComponentOfType(KICK.scene.MeshRenderer);\nvar material = meshRenderer.material;\n</pre>", "guessedname": "getComponentOfType", "guessedtype": "function"}, "destroy": {"description": "Destroys game object after next frame.\nRemoves all components instantly.", "guessedname": "destroy", "guessedtype": "function"}}, "file": "scene.js", "guessedtype": "function", "shortname": "GameObject", "properties": {"engine": {"type": "KICK.core.Engine", "description": "Reference to the engine", "guessedname": "engine", "guessedtype": "property"}, "numberOfComponents": {"type": "Number", "description": "Number of components (excluding transform)", "guessedname": "numberOfComponents", "guessedtype": "property"}, "layer": {"type": "Number", "description": "Layer bit flag. The default value is 1.\nThe layer should have a value of 2^n", "guessedname": "layer", "guessedtype": "property"}, "scene": {"type": "KICK.scene.Scene", "description": "Reference to the containing scene", "guessedname": "scene", "guessedtype": "property"}, "transform": {"type": "KICK.scene.Transform", "description": "Reference to the transform", "guessedname": "transform", "guessedtype": "property"}}, "description": "Game objects. (Always attached to a given scene)"}, "KICK.texture.RenderTexture": {"name": "KICK.texture.RenderTexture", "constructors": [{"params": [{"type": "KICK.core.Engine", "name": "engine", "description": ""}, {"type": "KICK.texture.Texture", "name": "_colorTexture", "description": " Optional (may be null)"}, {"type": "KICK.texture.Texture", "name": "_depthTexture", "description": " Optional (may be null)"}], "description": "Render texture (used for camera's render target)"}], "namespace": "KICK.texture", "module": "KICK", "guessedname": "RenderTexture", "methods": {"bind": {"guessedname": "bind", "guessedtype": "function"}}, "file": "texture.js", "guessedtype": "function", "shortname": "RenderTexture", "todo": "- currently incomplete", "properties": {"depthTexture": {"type": "KICK.texture.Texture", "description": "Read only", "guessedname": "depthTexture", "guessedtype": "property"}, "dimension": {"type": "KICK.math.vec2", "description": "Read only", "guessedname": "dimension", "guessedtype": "property"}, "colorTexture": {"type": "KICK.texture.Texture", "description": "Read only", "guessedname": "colorTexture", "guessedtype": "property"}}, "description": "Render texture (used for camera's render target)"}, "KICK.texture.Texture": {"name": "KICK.texture.Texture", "constructors": [{"params": [{"type": "KICK.core.Engine", "name": "engine", "description": ""}, {"type": "Object", "name": "config", "description": " Optional"}, {"type": "Object", "name": "uidMapping", "description": " Optional Maps from old uid to new uid"}], "description": "Encapsulate a texture object and its configuration."}], "namespace": "KICK.texture", "module": "KICK", "guessedname": "Texture", "methods": {"setTemporaryTexture": {"description": "Creates a 2x2 temporary image (checkerboard)", "guessedname": "setTemporaryTexture", "guessedtype": "function"}, "setImageData": {"params": [{"type": "Number", "name": "width", "description": " image width in pixels"}, {"type": "Number", "name": "height", "description": " image height in pixels"}, {"type": "Number", "name": "border", "description": " image border in pixels"}, {"type": "Object", "name": "type", "description": " GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_5_5_5_1 or GL_UNSIGNED_SHORT_5_6_5"}, {"type": "Array", "name": "pixels", "description": " array of pixels (may be null)"}, {"type": "String", "name": "dataURI", "description": " String representing the image"}], "description": "Set a image using a raw bytearray in a specified format", "guessedname": "setImageData", "guessedtype": "function"}, "recreateTextureIfDifferentType": {"private": "", "guessedname": "recreateTextureIfDifferentType", "guessedtype": "function"}, "setImage": {"params": [{"type": "Image", "name": "imageObj", "description": " image object to import"}, {"type": "String", "name": "dataURI", "description": " String representing the image"}], "description": "Set texture image based on a image object.<br>\nThe image is automatically resized nearest power of two<br>\nWhen a textureType == TEXTURE_CUBE_MAP the image needs to be in the following format:\n<ul>\n<li>width = 6*height</li>\n<li>Image needs to be ordered: [Right, Left, Top, Bottom, Front, Back] (As in <a href=\"http://www.cgtextures.com/content.php?action=tutorial&name=cubemaps\">NVidia DDS Exporter</a>)</li>\n</ul>", "guessedname": "setImage", "guessedtype": "function"}, "bind": {"description": "Bind the current texture", "guessedname": "bind", "guessedtype": "function"}, "destroy": {"description": "Deallocates the texture from memory", "guessedname": "destroy", "guessedtype": "function"}, "toJSON": {"return": {"type": "Object", "description": "config element"}, "description": "Serializes the data into a JSON object (that can be used as a config parameter in the constructor)<br>\nNote that the texture data is not serialized in the json format. <br>\nThis means that either setImage() or setImageData() must be called before the texture can be bound<br>", "guessedname": "toJSON", "guessedtype": "function"}}, "file": "texture.js", "guessedtype": "function", "shortname": "Texture", "properties": {"dataURI": {"type": "String", "description": "Identifier of the texture", "guessedname": "dataURI", "guessedtype": "property"}, "wrapS": {"type": "Object", "description": "Texture.wrapS should be either GL_CLAMP_TO_EDGE or GL_REPEAT<br>\nDefault: GL_REPEAT", "guessedname": "wrapS", "guessedtype": "property"}, "minFilter": {"type": "Object", "description": "Texture.minFilter should be either GL_NEAREST, GL_LINEAR, GL_NEAREST_MIPMAP_NEAREST, <br>\nGL_LINEAR_MIPMAP_NEAREST, GL_NEAREST_MIPMAP_LINEAR, GL_LINEAR_MIPMAP_LINEAR<br>\nDefault: GL_LINEAR", "guessedname": "minFilter", "guessedtype": "property"}, "wrapT": {"type": "Object", "description": "Texture.wrapT should be either GL_CLAMP_TO_EDGE or GL_REPEAT<br>\nDefault: GL_REPEAT", "guessedname": "wrapT", "guessedtype": "property"}, "generateMipmaps": {"type": "Boolean", "description": "Autogenerate mipmap levels<br>\n(Default true)", "guessedname": "generateMipmaps", "guessedtype": "property"}, "flipY": {"type": "Boolean", "description": "When importing image flip the Y direction of the image\n(Default true).<br>\nThis property is ignored for cube maps.", "guessedname": "flipY", "guessedtype": "property"}, "magFilter": {"type": "Object", "description": "Texture.magFilter should be either GL_NEAREST or GL_LINEAR. <br>\nDefault: GL_LINEAR", "guessedname": "magFilter", "guessedtype": "property"}, "textureType": {"type": "Number", "description": "Specifies the texture type<br>\nDefault is GL_TEXTURE_2D<br>\nMust be one of the following:\nGL_TEXTURE_2D,\nGL_TEXTURE_CUBE_MAP", "guessedname": "textureType", "guessedtype": "property"}, "internalFormat": {"type": "Number", "description": "Specifies the internal format of the image (format on GPU)<br>\nDefault is GL_RGBA<br>\nMust be one of the following:\nGL_ALPHA,\nGL_RGB,\nGL_RGBA,\nGL_LUMINANCE,\nGL_LUMINANCE_ALPHA", "guessedname": "internalFormat", "guessedtype": "property"}, "textureId": {"type": "{Number}", "guessedname": "textureId", "guessedtype": "property"}, "dimension": {"type": "{vec2}", "description": "Dimension of texture [width,height].<br>\nNote for cube maps the size is for one face", "guessedname": "dimension", "guessedtype": "property"}, "uid": {"type": "{Number}", "description": "Unique identifier of the texture", "guessedname": "uid", "guessedtype": "property"}}, "description": "Encapsulate a texture object and its configuration."}, "KICK.core.Time": {"name": "KICK.core.Time", "namespace": "KICK.core", "module": "KICK", "guessedname": "Time", "file": "core.js", "guessedtype": "function", "shortname": "Time", "properties": {"avarageFramesPerSecond": {"type": "Number", "description": "fps since start"}, "deltaTime": {"type": "Number", "description": "Millis between this frame and last frame"}, "frameCount": {"type": "Number", "description": "Number of frames since start"}, "time": {"type": "Number", "description": "Time since start in millis"}}, "description": "A global timer object"}, "KICK.scene.SceneLights": {"name": "KICK.scene.SceneLights", "namespace": "KICK.scene", "module": "KICK", "guessedname": "SceneLights", "methods": {"recomputeDirectionalLight": {"params": [{"type": "KICK.math.mat4", "name": "modelViewMatrix", "description": ""}], "guessedname": "recomputeDirectionalLight", "guessedtype": "function"}}, "file": "scene.js", "guessedtype": "function", "shortname": "SceneLights", "properties": {"ambientLight": {"type": "KICK.scene.Light", "description": "The ambient light in the scene.", "guessedname": "ambientLight", "guessedtype": "property"}, "directionalLight": {"type": "KICK.scene.Light", "description": "The directional light in the scene.", "guessedname": "directionalLight", "guessedtype": "property"}, "directionalLightDirection": {"type": "KICK.math.vec3", "description": "Normalized light direction (calculated in recomputeDirectionalLight()) <br>\nNote the light direction if from the surface towards the light", "guessedname": "directionalLightDirection", "guessedtype": "property"}, "directionalHalfVector": {"type": "KICK.math.vec3", "description": "The half vector of the directional light source  (calculated in recomputeDirectionalLight())", "guessedname": "directionalHalfVector", "guessedtype": "property"}, "otherLights": {"type": "Array[KICK.scene.Light]", "description": "The point  light sources in the scene.", "guessedname": "otherLights", "guessedtype": "property"}}, "description": "Datastructure used pass light information"}, "KICK.material.Material": {"name": "KICK.material.Material", "constructors": [{"description": "Material configuration"}], "namespace": "KICK.material", "module": "KICK", "guessedname": "Material", "methods": {"bind": {"description": "Binds textures and uniforms", "guessedname": "bind", "guessedtype": "function"}, "toJSON": {"return": {"type": "string", "description": ""}, "description": "Returns a JSON representation of the material<br>", "guessedname": "toJSON", "guessedtype": "function"}, "verifyUniforms": {"static": "", "params": [{"type": "Object", "name": "uniforms", "description": ""}], "description": "The method replaces any invalid uniform (Array) with a wrapped one (Float32Array or Int32Array)", "guessedname": "verifyUniforms", "guessedtype": "function"}}, "file": "material.js", "guessedtype": "function", "shortname": "Material", "properties": {"uniforms": {"type": "Object", "description": "Object with of uniforms.\nThe object has a number of named properties one for each uniform. The uniform object contains value and type.\nThe value is always an array", "guessedname": "uniforms", "guessedtype": "property"}, "name": {"type": "String", "guessedname": "name", "guessedtype": "property"}, "shader": {"type": "KICK.material.Shader", "guessedname": "shader", "guessedtype": "property"}}, "description": "Material configuration"}, "KICK.core.Constants": {"description": "This class contains references to WebGL constants.<br>\nConstants will be replace with actual values to increase performance when the file is compile by the postprocessor.<br>\nNote that I have intentionally named the WebGL constants with a prefix 'GL_'. This allows use of normal WebGL\nconstants that will not be replaced by the preprocessor.", "namespace": "KICK.core", "module": "KICK", "guessedname": "Constants", "file": "constants.js", "guessedtype": "property", "shortname": "Constants", "properties": {"GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT": {"description": "Value 36054", "static": "", "guessedname": "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_BITS": {"description": "Value 3414", "static": "", "guessedname": "GL_DEPTH_BITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LINE_STRIP": {"description": "Value 3", "static": "", "guessedname": "GL_LINE_STRIP", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE24": {"description": "Value 34008", "static": "", "guessedname": "GL_TEXTURE24", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER_COMPLETE": {"description": "Value 36053", "static": "", "guessedname": "GL_FRAMEBUFFER_COMPLETE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNSIGNED_SHORT_5_6_5": {"description": "Value 33635", "static": "", "guessedname": "GL_UNSIGNED_SHORT_5_6_5", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RGB5_A1": {"description": "Value 32855", "static": "", "guessedname": "GL_RGB5_A1", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE30": {"description": "Value 34014", "static": "", "guessedname": "GL_TEXTURE30", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE31": {"description": "Value 34015", "static": "", "guessedname": "GL_TEXTURE31", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VERTEX_ATTRIB_ARRAY_SIZE": {"description": "Value 34339", "static": "", "guessedname": "GL_VERTEX_ATTRIB_ARRAY_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_CUBE_MAP": {"description": "Value 34067", "static": "", "guessedname": "GL_TEXTURE_CUBE_MAP", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SRC_ALPHA_SATURATE": {"description": "Value 776", "static": "", "guessedname": "GL_SRC_ALPHA_SATURATE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VERTEX_SHADER": {"description": "Value 35633", "static": "", "guessedname": "GL_VERTEX_SHADER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE5": {"description": "Value 33989", "static": "", "guessedname": "GL_TEXTURE5", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CONSTANT_ALPHA": {"description": "Value 32771", "static": "", "guessedname": "GL_CONSTANT_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_CLEAR_VALUE": {"description": "Value 2931", "static": "", "guessedname": "GL_DEPTH_CLEAR_VALUE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DITHER": {"description": "Value 3024", "static": "", "guessedname": "GL_DITHER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VERTEX_ATTRIB_ARRAY_ENABLED": {"description": "Value 34338", "static": "", "guessedname": "GL_VERTEX_ATTRIB_ARRAY_ENABLED", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE20": {"description": "Value 34004", "static": "", "guessedname": "GL_TEXTURE20", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE28": {"description": "Value 34012", "static": "", "guessedname": "GL_TEXTURE28", "guessedtype": "property", "type": "Number", "final": ""}, "LIGHT_TYPE_DIRECTIONAL": {"final": "", "type": "Number", "description": "Used to define directional light in the scene (such as sunlight)", "guessedname": "_LIGHT_TYPE_DIRECTIONAL", "guessedtype": "property"}, "GL_FLOAT_VEC3": {"description": "Value 35665", "static": "", "guessedname": "GL_FLOAT_VEC3", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_INTERNAL_FORMAT": {"description": "Value 36164", "static": "", "guessedname": "GL_RENDERBUFFER_INTERNAL_FORMAT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE18": {"description": "Value 34002", "static": "", "guessedname": "GL_TEXTURE18", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": {"description": "Value 36048", "static": "", "guessedname": "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_REF": {"description": "Value 2967", "static": "", "guessedname": "GL_STENCIL_REF", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VALIDATE_STATUS": {"description": "Value 35715", "static": "", "guessedname": "GL_VALIDATE_STATUS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FLOAT": {"description": "Value 5126", "static": "", "guessedname": "GL_FLOAT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ACTIVE_ATTRIBUTES": {"description": "Value 35721", "static": "", "guessedname": "GL_ACTIVE_ATTRIBUTES", "guessedtype": "property", "type": "Number", "final": ""}, "GL_COMPILE_STATUS": {"description": "Value 35713", "static": "", "guessedname": "GL_COMPILE_STATUS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_POINTS": {"description": "Value 0", "static": "", "guessedname": "GL_POINTS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE17": {"description": "Value 34001", "static": "", "guessedname": "GL_TEXTURE17", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLEND": {"description": "Value 3042", "static": "", "guessedname": "GL_BLEND", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MIRRORED_REPEAT": {"description": "Value 33648", "static": "", "guessedname": "GL_MIRRORED_REPEAT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_BUFFER_BIT": {"description": "Value 1024", "static": "", "guessedname": "GL_STENCIL_BUFFER_BIT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_BLUE_SIZE": {"description": "Value 36178", "static": "", "guessedname": "GL_RENDERBUFFER_BLUE_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNSIGNED_SHORT": {"description": "Value 5123", "static": "", "guessedname": "GL_UNSIGNED_SHORT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FASTEST": {"description": "Value 4353", "static": "", "guessedname": "GL_FASTEST", "guessedtype": "property", "type": "Number", "final": ""}, "GL_REPEAT": {"description": "Value 10497", "static": "", "guessedname": "GL_REPEAT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_RENDERBUFFER_SIZE": {"description": "Value 34024", "static": "", "guessedname": "GL_MAX_RENDERBUFFER_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLEND_SRC_RGB": {"description": "Value 32969", "static": "", "guessedname": "GL_BLEND_SRC_RGB", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_COMPONENT16": {"description": "Value 33189", "static": "", "guessedname": "GL_DEPTH_COMPONENT16", "guessedtype": "property", "type": "Number", "final": ""}, "GL_POLYGON_OFFSET_UNITS": {"description": "Value 10752", "static": "", "guessedname": "GL_POLYGON_OFFSET_UNITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ONE_MINUS_DST_COLOR": {"description": "Value 775", "static": "", "guessedname": "GL_ONE_MINUS_DST_COLOR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ONE_MINUS_SRC_COLOR": {"description": "Value 769", "static": "", "guessedname": "GL_ONE_MINUS_SRC_COLOR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE22": {"description": "Value 34006", "static": "", "guessedname": "GL_TEXTURE22", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE21": {"description": "Value 34005", "static": "", "guessedname": "GL_TEXTURE21", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE7": {"description": "Value 33991", "static": "", "guessedname": "GL_TEXTURE7", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE27": {"description": "Value 34011", "static": "", "guessedname": "GL_TEXTURE27", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE26": {"description": "Value 34010", "static": "", "guessedname": "GL_TEXTURE26", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE25": {"description": "Value 34009", "static": "", "guessedname": "GL_TEXTURE25", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE": {"description": "Value 5890", "static": "", "guessedname": "GL_TEXTURE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLEND_EQUATION_ALPHA": {"description": "Value 34877", "static": "", "guessedname": "GL_BLEND_EQUATION_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE8": {"description": "Value 33992", "static": "", "guessedname": "GL_TEXTURE8", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE29": {"description": "Value 34013", "static": "", "guessedname": "GL_TEXTURE29", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ONE_MINUS_CONSTANT_COLOR": {"description": "Value 32770", "static": "", "guessedname": "GL_ONE_MINUS_CONSTANT_COLOR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ELEMENT_ARRAY_BUFFER_BINDING": {"description": "Value 34965", "static": "", "guessedname": "GL_ELEMENT_ARRAY_BUFFER_BINDING", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE9": {"description": "Value 33993", "static": "", "guessedname": "GL_TEXTURE9", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y": {"description": "Value 34072", "static": "", "guessedname": "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X": {"description": "Value 34070", "static": "", "guessedname": "GL_TEXTURE_CUBE_MAP_NEGATIVE_X", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z": {"description": "Value 34074", "static": "", "guessedname": "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_PASS_DEPTH_PASS": {"description": "Value 2966", "static": "", "guessedname": "GL_STENCIL_PASS_DEPTH_PASS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INCR_WRAP": {"description": "Value 34055", "static": "", "guessedname": "GL_INCR_WRAP", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNPACK_COLORSPACE_CONVERSION_WEBGL": {"description": "Value 37443", "static": "", "guessedname": "GL_UNPACK_COLORSPACE_CONVERSION_WEBGL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LINE_LOOP": {"description": "Value 2", "static": "", "guessedname": "GL_LINE_LOOP", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE4": {"description": "Value 33988", "static": "", "guessedname": "GL_TEXTURE4", "guessedtype": "property", "type": "Number", "final": ""}, "GL_COLOR_BUFFER_BIT": {"description": "Value 16384", "static": "", "guessedname": "GL_COLOR_BUFFER_BIT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE6": {"description": "Value 33990", "static": "", "guessedname": "GL_TEXTURE6", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DONT_CARE": {"description": "Value 4352", "static": "", "guessedname": "GL_DONT_CARE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ACTIVE_UNIFORMS": {"description": "Value 35718", "static": "", "guessedname": "GL_ACTIVE_UNIFORMS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LINEAR_MIPMAP_LINEAR": {"description": "Value 9987", "static": "", "guessedname": "GL_LINEAR_MIPMAP_LINEAR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE2": {"description": "Value 33986", "static": "", "guessedname": "GL_TEXTURE2", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE3": {"description": "Value 33987", "static": "", "guessedname": "GL_TEXTURE3", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y": {"description": "Value 34071", "static": "", "guessedname": "GL_TEXTURE_CUBE_MAP_POSITIVE_Y", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DECR_WRAP": {"description": "Value 34056", "static": "", "guessedname": "GL_DECR_WRAP", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNSIGNED_INT": {"description": "Value 5125", "static": "", "guessedname": "GL_UNSIGNED_INT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLEND_EQUATION": {"description": "Value 32777", "static": "", "guessedname": "GL_BLEND_EQUATION", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BROWSER_DEFAULT_WEBGL": {"description": "Value 37444", "static": "", "guessedname": "GL_BROWSER_DEFAULT_WEBGL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BYTE": {"description": "Value 5120", "static": "", "guessedname": "GL_BYTE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_VERTEX_UNIFORM_VECTORS": {"description": "Value 36347", "static": "", "guessedname": "GL_MAX_VERTEX_UNIFORM_VECTORS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RGBA": {"description": "Value 6408", "static": "", "guessedname": "GL_RGBA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ATTACHED_SHADERS": {"description": "Value 35717", "static": "", "guessedname": "GL_ATTACHED_SHADERS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INVALID_VALUE": {"description": "Value 1281", "static": "", "guessedname": "GL_INVALID_VALUE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_STENCIL_SIZE": {"description": "Value 36181", "static": "", "guessedname": "GL_RENDERBUFFER_STENCIL_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_GEQUAL": {"description": "Value 518", "static": "", "guessedname": "GL_GEQUAL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SAMPLE_COVERAGE_INVERT": {"description": "Value 32939", "static": "", "guessedname": "GL_SAMPLE_COVERAGE_INVERT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_NUM_COMPRESSED_TEXTURE_FORMATS": {"description": "Value 34466", "static": "", "guessedname": "GL_NUM_COMPRESSED_TEXTURE_FORMATS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LINES": {"description": "Value 1", "static": "", "guessedname": "GL_LINES", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ONE": {"description": "Value 1", "static": "", "guessedname": "GL_ONE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE19": {"description": "Value 34003", "static": "", "guessedname": "GL_TEXTURE19", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE16": {"description": "Value 34000", "static": "", "guessedname": "GL_TEXTURE16", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE0": {"description": "Value 33984", "static": "", "guessedname": "GL_TEXTURE0", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LINE_WIDTH": {"description": "Value 2849", "static": "", "guessedname": "GL_LINE_WIDTH", "guessedtype": "property", "type": "Number", "final": ""}, "GL_GENERATE_MIPMAP_HINT": {"description": "Value 33170", "static": "", "guessedname": "GL_GENERATE_MIPMAP_HINT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE12": {"description": "Value 33996", "static": "", "guessedname": "GL_TEXTURE12", "guessedtype": "property", "type": "Number", "final": ""}, "GL_COLOR_CLEAR_VALUE": {"description": "Value 3106", "static": "", "guessedname": "GL_COLOR_CLEAR_VALUE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE10": {"description": "Value 33994", "static": "", "guessedname": "GL_TEXTURE10", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE1": {"description": "Value 33985", "static": "", "guessedname": "GL_TEXTURE1", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BUFFER_USAGE": {"description": "Value 34661", "static": "", "guessedname": "GL_BUFFER_USAGE", "guessedtype": "property", "type": "Number", "final": ""}, "_DEGREE_TO_RADIAN": {"description": "Value 0.01745329251994", "static": "", "guessedname": "_DEGREE_TO_RADIAN", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLEND_EQUATION_RGB": {"description": "Value 32777", "static": "", "guessedname": "GL_BLEND_EQUATION_RGB", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE13": {"description": "Value 33997", "static": "", "guessedname": "GL_TEXTURE13", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LINK_STATUS": {"description": "Value 35714", "static": "", "guessedname": "GL_LINK_STATUS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TRIANGLE_STRIP": {"description": "Value 5", "static": "", "guessedname": "GL_TRIANGLE_STRIP", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLEND_DST_ALPHA": {"description": "Value 32970", "static": "", "guessedname": "GL_BLEND_DST_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLEND_COLOR": {"description": "Value 32773", "static": "", "guessedname": "GL_BLEND_COLOR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FUNC_ADD": {"description": "Value 32774", "static": "", "guessedname": "GL_FUNC_ADD", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ALPHA_BITS": {"description": "Value 3413", "static": "", "guessedname": "GL_ALPHA_BITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_CUBE_MAP_POSITIVE_X": {"description": "Value 34069", "static": "", "guessedname": "GL_TEXTURE_CUBE_MAP_POSITIVE_X", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FLOAT_VEC4": {"description": "Value 35666", "static": "", "guessedname": "GL_FLOAT_VEC4", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED": {"description": "Value 34922", "static": "", "guessedname": "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERER": {"description": "Value 7937", "static": "", "guessedname": "GL_RENDERER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ONE_MINUS_CONSTANT_ALPHA": {"description": "Value 32772", "static": "", "guessedname": "GL_ONE_MINUS_CONSTANT_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_NEAREST_MIPMAP_LINEAR": {"description": "Value 9986", "static": "", "guessedname": "GL_NEAREST_MIPMAP_LINEAR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_ATTACHMENT": {"description": "Value 36096", "static": "", "guessedname": "GL_DEPTH_ATTACHMENT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CURRENT_VERTEX_ATTRIB": {"description": "Value 34342", "static": "", "guessedname": "GL_CURRENT_VERTEX_ATTRIB", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ARRAY_BUFFER_BINDING": {"description": "Value 34964", "static": "", "guessedname": "GL_ARRAY_BUFFER_BINDING", "guessedtype": "property", "type": "Number", "final": ""}, "_RADIAN_TO_DEGREE": {"description": "Value 57.2957795130824", "static": "", "guessedname": "_RADIAN_TO_DEGREE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_2D": {"description": "Value 3553", "static": "", "guessedname": "GL_TEXTURE_2D", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CONSTANT_COLOR": {"description": "Value 32769", "static": "", "guessedname": "GL_CONSTANT_COLOR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DYNAMIC_DRAW": {"description": "Value 35048", "static": "", "guessedname": "GL_DYNAMIC_DRAW", "guessedtype": "property", "type": "Number", "final": ""}, "GL_OUT_OF_MEMORY": {"description": "Value 1285", "static": "", "guessedname": "GL_OUT_OF_MEMORY", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE15": {"description": "Value 33999", "static": "", "guessedname": "GL_TEXTURE15", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BOOL_VEC3": {"description": "Value 35672", "static": "", "guessedname": "GL_BOOL_VEC3", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNPACK_FLIP_Y_WEBGL": {"description": "Value 37440", "static": "", "guessedname": "GL_UNPACK_FLIP_Y_WEBGL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_FUNC": {"description": "Value 2962", "static": "", "guessedname": "GL_STENCIL_FUNC", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VENDOR": {"description": "Value 7936", "static": "", "guessedname": "GL_VENDOR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS": {"description": "Value 36057", "static": "", "guessedname": "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VERTEX_ATTRIB_ARRAY_TYPE": {"description": "Value 34341", "static": "", "guessedname": "GL_VERTEX_ATTRIB_ARRAY_TYPE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CONTEXT_LOST_WEBGL": {"description": "Value 37442", "static": "", "guessedname": "GL_CONTEXT_LOST_WEBGL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SAMPLER_2D": {"description": "Value 35678", "static": "", "guessedname": "GL_SAMPLER_2D", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE14": {"description": "Value 33998", "static": "", "guessedname": "GL_TEXTURE14", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ALIASED_LINE_WIDTH_RANGE": {"description": "Value 33902", "static": "", "guessedname": "GL_ALIASED_LINE_WIDTH_RANGE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_TEXTURE_SIZE": {"description": "Value 3379", "static": "", "guessedname": "GL_MAX_TEXTURE_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_INDEX8": {"description": "Value 36168", "static": "", "guessedname": "GL_STENCIL_INDEX8", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_WRITEMASK": {"description": "Value 2968", "static": "", "guessedname": "GL_STENCIL_WRITEMASK", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DECR": {"description": "Value 7683", "static": "", "guessedname": "GL_DECR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BACK": {"description": "Value 1029", "static": "", "guessedname": "GL_BACK", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_ATTACHMENT": {"description": "Value 36128", "static": "", "guessedname": "GL_STENCIL_ATTACHMENT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INT": {"description": "Value 5124", "static": "", "guessedname": "GL_INT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ARRAY_BUFFER": {"description": "Value 34962", "static": "", "guessedname": "GL_ARRAY_BUFFER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_GREEN_SIZE": {"description": "Value 36177", "static": "", "guessedname": "GL_RENDERBUFFER_GREEN_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNSIGNED_SHORT_5_5_5_1": {"description": "Value 32820", "static": "", "guessedname": "GL_UNSIGNED_SHORT_5_5_5_1", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BOOL_VEC4": {"description": "Value 35673", "static": "", "guessedname": "GL_BOOL_VEC4", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FLOAT_MAT4": {"description": "Value 35676", "static": "", "guessedname": "GL_FLOAT_MAT4", "guessedtype": "property", "type": "Number", "final": ""}, "GL_POLYGON_OFFSET_FILL": {"description": "Value 32823", "static": "", "guessedname": "GL_POLYGON_OFFSET_FILL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STREAM_DRAW": {"description": "Value 35040", "static": "", "guessedname": "GL_STREAM_DRAW", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ZERO": {"description": "Value 0", "static": "", "guessedname": "GL_ZERO", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER_BINDING": {"description": "Value 36006", "static": "", "guessedname": "GL_FRAMEBUFFER_BINDING", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ELEMENT_ARRAY_BUFFER": {"description": "Value 34963", "static": "", "guessedname": "GL_ELEMENT_ARRAY_BUFFER", "guessedtype": "property", "type": "Number", "final": ""}, "_ASSERT_EDITOR": {"description": "Allows usage of assertions in the code. The assertions will be set to false in the \"compiled\" code (this\nwill remove dead code in the minify-stage).<br>\nExample usage:\n<pre class=\"brush: js\">\nvar constants = KICK.core.Constants;\nif (constants._ASSERT){\nif (!Number.isNumber(x)){\nKICK.core.Util.fail(\"x should be a number\");\n}\n}\n</pre>", "static": "", "guessedname": "_ASSERT", "guessedtype": "property", "type": "Boolean", "final": ""}, "GL_MAX_CUBE_MAP_TEXTURE_SIZE": {"description": "Value 34076", "static": "", "guessedname": "GL_MAX_CUBE_MAP_TEXTURE_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRONT_AND_BACK": {"description": "Value 1032", "static": "", "guessedname": "GL_FRONT_AND_BACK", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CURRENT_PROGRAM": {"description": "Value 35725", "static": "", "guessedname": "GL_CURRENT_PROGRAM", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER": {"description": "Value 36160", "static": "", "guessedname": "GL_FRAMEBUFFER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MEDIUM_FLOAT": {"description": "Value 36337", "static": "", "guessedname": "GL_MEDIUM_FLOAT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LINEAR_MIPMAP_NEAREST": {"description": "Value 9985", "static": "", "guessedname": "GL_LINEAR_MIPMAP_NEAREST", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_TEST": {"description": "Value 2960", "static": "", "guessedname": "GL_STENCIL_TEST", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ONE_MINUS_SRC_ALPHA": {"description": "Value 771", "static": "", "guessedname": "GL_ONE_MINUS_SRC_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNSIGNED_SHORT_4_4_4_4": {"description": "Value 32819", "static": "", "guessedname": "GL_UNSIGNED_SHORT_4_4_4_4", "guessedtype": "property", "type": "Number", "final": ""}, "_DEBUG": {"description": "Allows usage of debugging in the script code. The flag can be set to false in the \"compiled\" code (this\nwill remove dead code in the minify-stage).<br>\nExample usage:<br>\n<pre class=\"brush: js\">\nvar constants = KICK.core.Constants;\nif (constants._DEBUG){\nconsole.log(\"X is now \"+x);\n}\n</pre>", "static": "", "guessedname": "_DEBUG", "guessedtype": "property", "type": "Boolean", "final": ""}, "GL_SRC_ALPHA": {"description": "Value 770", "static": "", "guessedname": "GL_SRC_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_CLEAR_VALUE": {"description": "Value 2961", "static": "", "guessedname": "GL_STENCIL_CLEAR_VALUE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": {"description": "Value 36050", "static": "", "guessedname": "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_GREEN_BITS": {"description": "Value 3411", "static": "", "guessedname": "GL_GREEN_BITS", "guessedtype": "property", "type": "Number", "final": ""}, "_EPSILON": {"description": "Value 0.00001", "static": "", "guessedname": "_EPSILON", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LUMINANCE_ALPHA": {"description": "Value 6410", "static": "", "guessedname": "GL_LUMINANCE_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": {"description": "Value 36055", "static": "", "guessedname": "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_NEAREST_MIPMAP_NEAREST": {"description": "Value 9984", "static": "", "guessedname": "GL_NEAREST_MIPMAP_NEAREST", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SHADING_LANGUAGE_VERSION": {"description": "Value 35724", "static": "", "guessedname": "GL_SHADING_LANGUAGE_VERSION", "guessedtype": "property", "type": "Number", "final": ""}, "GL_NOTEQUAL": {"description": "Value 517", "static": "", "guessedname": "GL_NOTEQUAL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INVERT": {"description": "Value 5386", "static": "", "guessedname": "GL_INVERT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_VARYING_VECTORS": {"description": "Value 36348", "static": "", "guessedname": "GL_MAX_VARYING_VECTORS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_BACK_FAIL": {"description": "Value 34817", "static": "", "guessedname": "GL_STENCIL_BACK_FAIL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_POLYGON_OFFSET_FACTOR": {"description": "Value 32824", "static": "", "guessedname": "GL_POLYGON_OFFSET_FACTOR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INCR": {"description": "Value 7682", "static": "", "guessedname": "GL_INCR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CULL_FACE": {"description": "Value 2884", "static": "", "guessedname": "GL_CULL_FACE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SAMPLE_ALPHA_TO_COVERAGE": {"description": "Value 32926", "static": "", "guessedname": "GL_SAMPLE_ALPHA_TO_COVERAGE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_BITS": {"description": "Value 3415", "static": "", "guessedname": "GL_STENCIL_BITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SAMPLE_COVERAGE_VALUE": {"description": "Value 32938", "static": "", "guessedname": "GL_SAMPLE_COVERAGE_VALUE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAGMENT_SHADER": {"description": "Value 35632", "static": "", "guessedname": "GL_FRAGMENT_SHADER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LEQUAL": {"description": "Value 515", "static": "", "guessedname": "GL_LEQUAL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TRIANGLE_FAN": {"description": "Value 6", "static": "", "guessedname": "GL_TRIANGLE_FAN", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_RED_SIZE": {"description": "Value 36176", "static": "", "guessedname": "GL_RENDERBUFFER_RED_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_PASS_DEPTH_FAIL": {"description": "Value 2965", "static": "", "guessedname": "GL_STENCIL_PASS_DEPTH_FAIL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_STENCIL": {"description": "Value 34041", "static": "", "guessedname": "GL_DEPTH_STENCIL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_VIEWPORT_DIMS": {"description": "Value 3386", "static": "", "guessedname": "GL_MAX_VIEWPORT_DIMS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_HEIGHT": {"description": "Value 36163", "static": "", "guessedname": "GL_RENDERBUFFER_HEIGHT", "guessedtype": "property", "type": "Number", "final": ""}, "TYPE_POINT": {"final": "", "type": "Number", "description": "Used to define point light in the scene", "guessedname": "_LIGHT_TYPE_POINT", "guessedtype": "property"}, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": {"description": "Value 34975", "static": "", "guessedname": "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", "guessedtype": "property", "type": "Number", "final": ""}, "GL_NO_ERROR": {"description": "Value 0", "static": "", "guessedname": "GL_NO_ERROR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_BACK_WRITEMASK": {"description": "Value 36005", "static": "", "guessedname": "GL_STENCIL_BACK_WRITEMASK", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FUNC_REVERSE_SUBTRACT": {"description": "Value 32779", "static": "", "guessedname": "GL_FUNC_REVERSE_SUBTRACT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VIEWPORT": {"description": "Value 2978", "static": "", "guessedname": "GL_VIEWPORT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": {"description": "Value 36049", "static": "", "guessedname": "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLEND_SRC_ALPHA": {"description": "Value 32971", "static": "", "guessedname": "GL_BLEND_SRC_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INVALID_FRAMEBUFFER_OPERATION": {"description": "Value 1286", "static": "", "guessedname": "GL_INVALID_FRAMEBUFFER_OPERATION", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_ALPHA_SIZE": {"description": "Value 36179", "static": "", "guessedname": "GL_RENDERBUFFER_ALPHA_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TRIANGLES": {"description": "Value 4", "static": "", "guessedname": "GL_TRIANGLES", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_MAG_FILTER": {"description": "Value 10240", "static": "", "guessedname": "GL_TEXTURE_MAG_FILTER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_VALUE_MASK": {"description": "Value 2963", "static": "", "guessedname": "GL_STENCIL_VALUE_MASK", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INVALID_OPERATION": {"description": "Value 1282", "static": "", "guessedname": "GL_INVALID_OPERATION", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER": {"description": "Value 36161", "static": "", "guessedname": "GL_RENDERBUFFER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LOW_INT": {"description": "Value 36339", "static": "", "guessedname": "GL_LOW_INT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_NONE": {"description": "Value 0", "static": "", "guessedname": "GL_NONE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_BACK_PASS_DEPTH_PASS": {"description": "Value 34819", "static": "", "guessedname": "GL_STENCIL_BACK_PASS_DEPTH_PASS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_KEEP": {"description": "Value 7680", "static": "", "guessedname": "GL_KEEP", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RGB565": {"description": "Value 36194", "static": "", "guessedname": "GL_RGB565", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DELETE_STATUS": {"description": "Value 35712", "static": "", "guessedname": "GL_DELETE_STATUS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_DEPTH_SIZE": {"description": "Value 36180", "static": "", "guessedname": "GL_RENDERBUFFER_DEPTH_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE11": {"description": "Value 33995", "static": "", "guessedname": "GL_TEXTURE11", "guessedtype": "property", "type": "Number", "final": ""}, "GL_COLOR_ATTACHMENT0": {"description": "Value 36064", "static": "", "guessedname": "GL_COLOR_ATTACHMENT0", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SHADER_COMPILER": {"description": "Value 36346", "static": "", "guessedname": "GL_SHADER_COMPILER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CLAMP_TO_EDGE": {"description": "Value 33071", "static": "", "guessedname": "GL_CLAMP_TO_EDGE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS": {"description": "Value 35660", "static": "", "guessedname": "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRONT": {"description": "Value 1028", "static": "", "guessedname": "GL_FRONT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SCISSOR_BOX": {"description": "Value 3088", "static": "", "guessedname": "GL_SCISSOR_BOX", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RGBA4": {"description": "Value 32854", "static": "", "guessedname": "GL_RGBA4", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SRC_COLOR": {"description": "Value 768", "static": "", "guessedname": "GL_SRC_COLOR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_WRITEMASK": {"description": "Value 2930", "static": "", "guessedname": "GL_DEPTH_WRITEMASK", "guessedtype": "property", "type": "Number", "final": ""}, "GL_PACK_ALIGNMENT": {"description": "Value 3333", "static": "", "guessedname": "GL_PACK_ALIGNMENT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SUBPIXEL_BITS": {"description": "Value 3408", "static": "", "guessedname": "GL_SUBPIXEL_BITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SHORT": {"description": "Value 5122", "static": "", "guessedname": "GL_SHORT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CULL_FACE_MODE": {"description": "Value 2885", "static": "", "guessedname": "GL_CULL_FACE_MODE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_FRAGMENT_UNIFORM_VECTORS": {"description": "Value 36349", "static": "", "guessedname": "GL_MAX_FRAGMENT_UNIFORM_VECTORS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CW": {"description": "Value 2304", "static": "", "guessedname": "GL_CW", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNSIGNED_BYTE": {"description": "Value 5121", "static": "", "guessedname": "GL_UNSIGNED_BYTE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SAMPLE_BUFFERS": {"description": "Value 32936", "static": "", "guessedname": "GL_SAMPLE_BUFFERS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SAMPLER_CUBE": {"description": "Value 35680", "static": "", "guessedname": "GL_SAMPLER_CUBE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_NICEST": {"description": "Value 4354", "static": "", "guessedname": "GL_NICEST", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BOOL": {"description": "Value 35670", "static": "", "guessedname": "GL_BOOL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VERSION": {"description": "Value 7938", "static": "", "guessedname": "GL_VERSION", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BUFFER_SIZE": {"description": "Value 34660", "static": "", "guessedname": "GL_BUFFER_SIZE", "guessedtype": "property", "type": "Number", "final": ""}, "_LIGHT_TYPE_AMBIENT": {"final": "", "type": "Number", "description": "Used to define ambient color in the scene (indirect lightening)", "guessedname": "_LIGHT_TYPE_AMBIENT", "guessedtype": "property"}, "GL_STENCIL_BACK_FUNC": {"description": "Value 34816", "static": "", "guessedname": "GL_STENCIL_BACK_FUNC", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ACTIVE_TEXTURE": {"description": "Value 34016", "static": "", "guessedname": "GL_ACTIVE_TEXTURE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ALPHA": {"description": "Value 6406", "static": "", "guessedname": "GL_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STATIC_DRAW": {"description": "Value 35044", "static": "", "guessedname": "GL_STATIC_DRAW", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_BINDING": {"description": "Value 36007", "static": "", "guessedname": "GL_RENDERBUFFER_BINDING", "guessedtype": "property", "type": "Number", "final": ""}, "GL_NEVER": {"description": "Value 512", "static": "", "guessedname": "GL_NEVER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ONE_MINUS_DST_ALPHA": {"description": "Value 773", "static": "", "guessedname": "GL_ONE_MINUS_DST_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_COLOR_WRITEMASK": {"description": "Value 3107", "static": "", "guessedname": "GL_COLOR_WRITEMASK", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DST_COLOR": {"description": "Value 774", "static": "", "guessedname": "GL_DST_COLOR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MEDIUM_INT": {"description": "Value 36340", "static": "", "guessedname": "GL_MEDIUM_INT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_BUFFER_BIT": {"description": "Value 256", "static": "", "guessedname": "GL_DEPTH_BUFFER_BIT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_BACK_PASS_DEPTH_FAIL": {"description": "Value 34818", "static": "", "guessedname": "GL_STENCIL_BACK_PASS_DEPTH_FAIL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_FUNC": {"description": "Value 2932", "static": "", "guessedname": "GL_DEPTH_FUNC", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ALWAYS": {"description": "Value 519", "static": "", "guessedname": "GL_ALWAYS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_WRAP_S": {"description": "Value 10242", "static": "", "guessedname": "GL_TEXTURE_WRAP_S", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_WRAP_T": {"description": "Value 10243", "static": "", "guessedname": "GL_TEXTURE_WRAP_T", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VERTEX_ATTRIB_ARRAY_POINTER": {"description": "Value 34373", "static": "", "guessedname": "GL_VERTEX_ATTRIB_ARRAY_POINTER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INVALID_ENUM": {"description": "Value 1280", "static": "", "guessedname": "GL_INVALID_ENUM", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FLOAT_MAT2": {"description": "Value 35674", "static": "", "guessedname": "GL_FLOAT_MAT2", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INT_VEC4": {"description": "Value 35669", "static": "", "guessedname": "GL_INT_VEC4", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INT_VEC3": {"description": "Value 35668", "static": "", "guessedname": "GL_INT_VEC3", "guessedtype": "property", "type": "Number", "final": ""}, "GL_ALIASED_POINT_SIZE_RANGE": {"description": "Value 33901", "static": "", "guessedname": "GL_ALIASED_POINT_SIZE_RANGE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_INT_VEC2": {"description": "Value 35667", "static": "", "guessedname": "GL_INT_VEC2", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_FAIL": {"description": "Value 2964", "static": "", "guessedname": "GL_STENCIL_FAIL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LUMINANCE": {"description": "Value 6409", "static": "", "guessedname": "GL_LUMINANCE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_CCW": {"description": "Value 2305", "static": "", "guessedname": "GL_CCW", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_VERTEX_ATTRIBS": {"description": "Value 34921", "static": "", "guessedname": "GL_MAX_VERTEX_ATTRIBS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_COMPONENT": {"description": "Value 6402", "static": "", "guessedname": "GL_DEPTH_COMPONENT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SCISSOR_TEST": {"description": "Value 3089", "static": "", "guessedname": "GL_SCISSOR_TEST", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_TEST": {"description": "Value 2929", "static": "", "guessedname": "GL_DEPTH_TEST", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BOOL_VEC2": {"description": "Value 35671", "static": "", "guessedname": "GL_BOOL_VEC2", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SHADER_TYPE": {"description": "Value 35663", "static": "", "guessedname": "GL_SHADER_TYPE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER_UNSUPPORTED": {"description": "Value 36061", "static": "", "guessedname": "GL_FRAMEBUFFER_UNSUPPORTED", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DST_ALPHA": {"description": "Value 772", "static": "", "guessedname": "GL_DST_ALPHA", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LOW_FLOAT": {"description": "Value 36336", "static": "", "guessedname": "GL_LOW_FLOAT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_MIN_FILTER": {"description": "Value 10241", "static": "", "guessedname": "GL_TEXTURE_MIN_FILTER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLEND_DST_RGB": {"description": "Value 32968", "static": "", "guessedname": "GL_BLEND_DST_RGB", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LINEAR": {"description": "Value 9729", "static": "", "guessedname": "GL_LINEAR", "guessedtype": "property", "type": "Number", "final": ""}, "GL_BLUE_BITS": {"description": "Value 3412", "static": "", "guessedname": "GL_BLUE_BITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FUNC_SUBTRACT": {"description": "Value 32778", "static": "", "guessedname": "GL_FUNC_SUBTRACT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": {"description": "Value 36051", "static": "", "guessedname": "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_LESS": {"description": "Value 513", "static": "", "guessedname": "GL_LESS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_INDEX": {"description": "Value 6401", "static": "", "guessedname": "GL_STENCIL_INDEX", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RGB": {"description": "Value 6407", "static": "", "guessedname": "GL_RGB", "guessedtype": "property", "type": "Number", "final": ""}, "GL_EQUAL": {"description": "Value 514", "static": "", "guessedname": "GL_EQUAL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_BINDING_CUBE_MAP": {"description": "Value 34068", "static": "", "guessedname": "GL_TEXTURE_BINDING_CUBE_MAP", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z": {"description": "Value 34073", "static": "", "guessedname": "GL_TEXTURE_CUBE_MAP_POSITIVE_Z", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_STENCIL_ATTACHMENT": {"description": "Value 33306", "static": "", "guessedname": "GL_DEPTH_STENCIL_ATTACHMENT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RENDERBUFFER_WIDTH": {"description": "Value 36162", "static": "", "guessedname": "GL_RENDERBUFFER_WIDTH", "guessedtype": "property", "type": "Number", "final": ""}, "GL_RED_BITS": {"description": "Value 3410", "static": "", "guessedname": "GL_RED_BITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_BACK_VALUE_MASK": {"description": "Value 36004", "static": "", "guessedname": "GL_STENCIL_BACK_VALUE_MASK", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE23": {"description": "Value 34007", "static": "", "guessedname": "GL_TEXTURE23", "guessedtype": "property", "type": "Number", "final": ""}, "GL_HIGH_FLOAT": {"description": "Value 36338", "static": "", "guessedname": "GL_HIGH_FLOAT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_DEPTH_RANGE": {"description": "Value 2928", "static": "", "guessedname": "GL_DEPTH_RANGE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_GREATER": {"description": "Value 516", "static": "", "guessedname": "GL_GREATER", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS": {"description": "Value 35661", "static": "", "guessedname": "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_NEAREST": {"description": "Value 9728", "static": "", "guessedname": "GL_NEAREST", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL": {"description": "Value 37441", "static": "", "guessedname": "GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL", "guessedtype": "property", "type": "Number", "final": ""}, "GL_COMPRESSED_TEXTURE_FORMATS": {"description": "Value 34467", "static": "", "guessedname": "GL_COMPRESSED_TEXTURE_FORMATS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SAMPLE_COVERAGE": {"description": "Value 32928", "static": "", "guessedname": "GL_SAMPLE_COVERAGE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_MAX_TEXTURE_IMAGE_UNITS": {"description": "Value 34930", "static": "", "guessedname": "GL_MAX_TEXTURE_IMAGE_UNITS", "guessedtype": "property", "type": "Number", "final": ""}, "GL_TEXTURE_BINDING_2D": {"description": "Value 32873", "static": "", "guessedname": "GL_TEXTURE_BINDING_2D", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FLOAT_MAT3": {"description": "Value 35675", "static": "", "guessedname": "GL_FLOAT_MAT3", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FRONT_FACE": {"description": "Value 2886", "static": "", "guessedname": "GL_FRONT_FACE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_STENCIL_BACK_REF": {"description": "Value 36003", "static": "", "guessedname": "GL_STENCIL_BACK_REF", "guessedtype": "property", "type": "Number", "final": ""}, "GL_REPLACE": {"description": "Value 7681", "static": "", "guessedname": "GL_REPLACE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_FLOAT_VEC2": {"description": "Value 35664", "static": "", "guessedname": "GL_FLOAT_VEC2", "guessedtype": "property", "type": "Number", "final": ""}, "GL_VERTEX_ATTRIB_ARRAY_STRIDE": {"description": "Value 34340", "static": "", "guessedname": "GL_VERTEX_ATTRIB_ARRAY_STRIDE", "guessedtype": "property", "type": "Number", "final": ""}, "GL_UNPACK_ALIGNMENT": {"description": "Value 3317", "static": "", "guessedname": "GL_UNPACK_ALIGNMENT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_HIGH_INT": {"description": "Value 36341", "static": "", "guessedname": "GL_HIGH_INT", "guessedtype": "property", "type": "Number", "final": ""}, "GL_SAMPLES": {"description": "Value 32937", "static": "", "guessedname": "GL_SAMPLES", "guessedtype": "property", "type": "Number", "final": ""}}, "name": "KICK.core.Constants"}, "KICK.material.Shader": {"name": "KICK.material.Shader", "constructors": [{"params": [{"type": "KICK.core.Engine", "name": "engine", "description": ""}, {"type": "Object", "name": "config", "description": ""}, {"type": "Object", "name": "uidMapping", "description": " Optional Maps from old uid to new uid"}], "description": "GLSL Shader object"}], "namespace": "KICK.material", "module": "KICK", "guessedname": "Shader", "methods": {"bindUniform": {"params": [{"type": "KICK.material.Material", "name": "material", "description": ""}, {"type": "KICK.math.mat4", "name": "projectionMatrix", "description": ""}, {"type": "KICK.math.mat4", "name": "modelViewMatrix", "description": ""}, {"type": "KICK.math.mat4", "name": "modelViewProjectionMatrix", "description": ""}, {"type": "KICK.scene.SceneLights", "name": "sceneLights", "description": ""}], "description": "Binds the uniforms to the current shader.\nThe uniforms is expected to be in a valid format", "guessedname": "bindUniform", "guessedtype": "function"}, "bind": {}, "getPrecompiledSource": {"return": {"type": "String", "description": "sourcecode after precompiler"}, "static": "", "params": [{"type": "String", "name": "sourcecode", "description": ""}], "guessedname": "getPrecompiledSource", "guessedtype": "function"}, "getBlendKey": {"description": "Updates the blend key that identifies blend+blendSFactor+blendDFactor<br>\nThe key is used to fast determine if the blend settings needs to be updated", "guessedname": "updateBlendKey", "guessedtype": "function"}, "updateShader": {"return": {"type": "Boolean", "description": "shader created successfully"}, "guessedname": "updateShader", "guessedtype": "function"}, "compileShader": {"guessedname": "compileShader", "params": [{"type": "String", "name": "str", "description": ""}, {"type": "Boolean", "name": "isFragmentShader", "description": ""}], "description": "Invoke shader compilation", "private": "", "guessedtype": "function"}, "isValid": {"return": {"type": "Boolean", "description": "is shader valid"}, "description": "Return true if the shader compiled successfully and is not destroyed", "guessedname": "isValid", "guessedtype": "function"}, "destroy": {"description": "Deletes the shader program from memory.\nA destroyed shader can be used again if update shader is called", "guessedname": "destroy", "guessedtype": "function"}, "toJSON": {"return": {"type": "Object", "description": "config element"}, "description": "Serializes the data into a JSON object (that can be used as a config parameter in the constructor)<br>\nNote errorLog are not serialized", "guessedname": "toJSON", "guessedtype": "function"}}, "file": "material.js", "guessedtype": "function", "shortname": "Shader", "properties": {"engine": {"type": "KICK.core.Engine", "description": "A reference to the engine object", "guessedname": "engine", "guessedtype": "property"}, "uniformMap": {"type": "Object", "description": "Lookup of uniform based on name.", "guessedname": "lookupUniform", "guessedtype": "property"}, "activeUniforms": {"type": "Object", "description": "Array of Object with size,type, name and index properties", "guessedname": "activeUniforms", "guessedtype": "property"}, "uid": {"type": "{Number}", "description": "Unique identifier of the shader", "guessedname": "uid", "guessedtype": "property"}, "zTest": {"type": "Object", "description": "The depth test function. Must be one of\nKICK.core.Constants.GL_NEVER,\nKICK.core.Constants.GL_LESS,\nKICK.core.Constants.GL_EQUAL,\nKICK.core.Constants.GL_LEQUAL,\nKICK.core.Constants.GL_GREATER,\nKICK.core.Constants.GL_NOTEQUAL,\nKICK.core.Constants.GL_GEQUAL,\nKICK.core.Constants.GL_ALWAYS", "guessedname": "zTest", "guessedtype": "property"}, "faceCulling": {"type": "Object", "description": "Must be set to KICK.core.Constants.GL_FRONT, KICK.core.Constants.GL_BACK (default),\nKICK.core.Constants.GL_FRONT_AND_BACK, KICK.core.Constants.NONE<br>\nNote that in faceCulling = GL_FRONT, GL_BACK or GL_FRONT_AND_BACK with face culling enabled<br>\nfaceCulling = GL_NONE means face culling disabled", "guessedname": "faceCulling", "guessedtype": "property"}, "errorLog": {"type": "Function", "description": "Function that will be invoked in case of error", "guessedname": "errorLog", "guessedtype": "property"}, "shaderProgramId": {"type": "ShaderProgram", "guessedname": "shaderProgramId", "guessedtype": "property"}, "blendSFactor": {"type": "{Number}", "description": "Specifies the blend s-factor<br>\nInitial value GL_SRC_ALPHA\nMust be set to one of: GL_ZERO, GL_ONE, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR, GL_DST_COLOR,\nGL_ONE_MINUS_DST_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_DST_ALPHA, GL_ONE_MINUS_DST_ALPHA,\nGL_CONSTANT_COLOR, GL_ONE_MINUS_CONSTANT_COLOR, GL_CONSTANT_ALPHA, GL_ONE_MINUS_CONSTANT_ALPHA, and\nGL_SRC_ALPHA_SATURATE.<br>\nSee <a href=\"http://www.opengl.org/sdk/docs/man/xhtml/glBlendFunc.xml\">glBlendFunc on opengl.org</a>", "guessedname": "blendSFactor", "guessedtype": "property"}, "vertexShaderSrc": {"type": "string", "guessedname": "vertexShaderSrc", "guessedtype": "property"}, "lookupAttribute": {"type": "Object", "description": "Lookup of attribute location based on name.", "guessedname": "lookupAttribute", "guessedtype": "property"}, "gl": {"type": "Object", "description": "Get the gl context of the shader", "guessedname": "gl", "guessedtype": "property"}, "blend": {"type": "Boolean", "description": "Enables/disables blending (default is false).<br>\n\"In RGBA mode, pixels can be drawn using a function that blends the incoming (source) RGBA values with the\nRGBA values that are already in the frame buffer (the destination values)\"\n(From <a href=\"http://www.opengl.org/sdk/docs/man/xhtml/glBlendFunc.xml\">www.Opengl.org</a>)", "guessedname": "blend", "guessedtype": "property"}, "fragmentShaderSrc": {"type": "string", "guessedname": "fragmentShaderSrc", "guessedtype": "property"}, "activeAttributes": {"type": "Array[Object]", "description": "Array of JSON data with size,type and name", "guessedname": "activeAttributes", "guessedtype": "property"}}, "description": "GLSL Shader object"}, "KICK.scene.Component": {"name": "KICK.scene.Component", "namespace": "KICK.scene", "module": "KICK", "methods": {"deactivated": {"description": "Abstract method called when a component is removed from scene. May be undefined."}, "activated": {"description": "Abstract method called when a component is added to scene. May be undefined."}, "update": {"description": "Abstract method called every update. May be undefined."}, "render": {"params": [{"type": "KICK.math.mat4", "name": "modelViewMatrix", "description": ""}, {"type": "KICK.math.mat4", "name": "modelViewProjectionMatrix", "description": " modelviewMatrix multiplied with projectionMatrix"}], "description": "Abstract method called every rendering. May be undefined."}, "lateUpdate": {"description": "Abstract method called every update as the last thing. Useful for camera scripts. May be undefined."}}, "file": "scene.js", "shortname": "Component", "properties": {"gameObject": {"type": "KICK.scene.GameObject", "description": "The gameObject owning the component. Initially undefined. The value is set when the Component object is added\nto a GameObject"}, "scriptPriority": {"type": "Number", "description": "Components with largest priority are invoked first. (optional - default 0). Cannot be modified after creation."}}, "description": "This class only specifies the interface of a component."}}, "version": "0.1.0", "namespaces": ["KICK.importer", "KICK.core", "KICK.material", "KICK.math", "KICK.mesh", "KICK.renderer", "KICK.scene", "KICK.texture"]}